package pe.gob.mininter.dirandro.vaadin.panel;

import java.util.Date;
import java.util.List;

import org.apache.commons.lang.StringUtils;

import pe.gob.mininter.dirandro.model.Opcion;
import pe.gob.mininter.dirandro.model.Persona;
import pe.gob.mininter.dirandro.model.Policia;
import pe.gob.mininter.dirandro.model.Usuario;
import pe.gob.mininter.dirandro.model.Valor;
import pe.gob.mininter.dirandro.service.PersonaService;
import pe.gob.mininter.dirandro.service.PoliciaService;
import pe.gob.mininter.dirandro.service.ValorService;
import pe.gob.mininter.dirandro.util.Constante;
import pe.gob.mininter.dirandro.util.HarecUtil;
import pe.gob.mininter.dirandro.vaadin.util.DirandroComponent;
import pe.gob.mininter.dirandro.vaadin.util.Injector;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

public class PanelMantenPolicia extends DirandroComponent implements TextChangeListener,ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout pnlPrincipal;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button button_1;
	@AutoGenerated
	private Button btnAgregar;
	@AutoGenerated
	private ComboBox cmbCargo;
	@AutoGenerated
	private ComboBox cmbUnidad;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_6;
	@AutoGenerated
	private ComboBox cmbGrado;
	@AutoGenerated
	private TextField txtCip;
	@AutoGenerated
	private VerticalLayout verticalLayout_4;
	@AutoGenerated
	private HorizontalLayout pnlPolicia2;
	@AutoGenerated
	private TextField txtNumeroDocumento;
	@AutoGenerated
	private TextField txtTipoDocumento;
	@AutoGenerated
	private HorizontalLayout pnlPolicia1;
	@AutoGenerated
	private Button btnAgregarPersona;
	@AutoGenerated
	private ComboBox cmbNombres;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private Table tblPolicias;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private TextField txtFiltroCip;
	@AutoGenerated
	private TextField txtFiltroDni;
	@AutoGenerated
	private TextField txtFiltroApellidoMaterno;
	@AutoGenerated
	private TextField txtFiltroApellido;
	@AutoGenerated
	private TextField txtFiltroNombre;
	@AutoGenerated
	private Label label_1;
	
	
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	private static final long serialVersionUID = 6703991780832879281L;
	
	private PanelAgregarPersona pnlAgregarPersona;
	private boolean flagNuevaEstado;

	private PoliciaService policiaService;
	private PersonaService personaService;
	private Policia policia;
	
	List<Persona> lstPersonas;
	
	private List<Valor> lstGrado;
	
	private List<Valor> lstUnidad;
	
	private List<Valor> lstCargo;
	
	private ValorService valorService;
	
	private Persona persona;	
		
	
	public PanelMantenPolicia(List<Opcion> acciones, String height) {
		super(acciones, height);
		policiaService = Injector.obtenerServicio(PoliciaService.class);
		personaService = Injector.obtenerServicio(PersonaService.class);
		valorService = Injector.obtenerServicio(ValorService.class);
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postConstruct();
		debugId();
	}
	private void debugId(){
		
	}
	public void postConstruct() {
		btnAgregarPersona.addListener((ClickListener)this);
		btnAgregarPersona.setIcon(Constante.ICONOS.CREATE);
		btnAgregar.addListener((ClickListener)this);
		pnlPolicia2.setEnabled(false);
		pnlPolicia2.addStyleName("center_area");		
		
		lstPersonas = personaService.buscar(null);
		cmbNombres.setInputPrompt("Persona");
		cmbNombres.setItemCaptionPropertyId("nombreCompleto");
		cmbNombres.setContainerDataSource(new BeanItemContainer<Persona>(Persona.class, lstPersonas));
				
		txtFiltroNombre.addListener((TextChangeListener)this);
		txtFiltroApellido.addListener((TextChangeListener)this);
		txtFiltroApellidoMaterno.addListener((TextChangeListener)this);
		txtFiltroDni.addListener((TextChangeListener)this);
		txtFiltroCip.addListener((TextChangeListener)this);
		
		txtFiltroNombre.setImmediate(true);
		txtFiltroApellido.setImmediate(true);
		txtFiltroApellidoMaterno.setImmediate(true);
		txtFiltroDni.setImmediate(true);
		txtFiltroCip.setImmediate(true);
		
		habilitarEdicion(false);
		
		tblPolicias.setSelectable(true);
		tblPolicias.setImmediate(true);
		tblPolicias.setNullSelectionAllowed(true);
		tblPolicias.setNullSelectionItemId(null);
		tblPolicias.addListener(new ValueChangeListener() {
			private static final long serialVersionUID = -6124596484581515359L;
			@Override
			public void valueChange(ValueChangeEvent event) {
				boolean esModoNuevo = tblPolicias.getValue() == null;				
				if(esModoNuevo){
					policia = new Policia();
					tblPolicias.setValue(null);
					habilitarEdicion(false);
				}else {
					habilitarEdicion(true);
					
					Item item = tblPolicias.getItem(tblPolicias.getValue());
					
					policia = policiaService.obtener( new Long( item.getItemProperty("id").getValue().toString() ));
					
					txtTipoDocumento.setValue(policia.getPersona().getTipoDocumento().getNombre());
					txtNumeroDocumento.setValue(policia.getPersona().getNroDocumento().toString());
					txtCip.setValue(policia.getCip().toString());
					
					cmbNombres.setContainerDataSource(new BeanItemContainer<Persona>(Persona.class, lstPersonas));
			    	//cmbNombres.setValue(policia.getPersona());
					Long idPersona = policia.getPersona().getId();
					Persona p = BuscarPersonaenLista(idPersona);
					cmbNombres.setValue(p);
			    	
					Valor unid=valorService.obtener(Long.parseLong(policia.getUnidad()));
					cmbUnidad.setValue(unid);
					cmbGrado.setValue(policia.getGrado());
					cmbCargo.setValue(policia.getCargo());
					
				}
			}
		});
		
		policia = new Policia();
		policia.setPersona( new Persona() );
		List<Policia> lista = policiaService.listarPolicias();
		cargarPolicias(lista, true);
		cargaListas();
	}
	
	private Persona BuscarPersonaenLista(Long Id)
	{
		for(int n=0; n<this.lstPersonas.size(); n++)
		{
			if(this.lstPersonas.get(n).getId() == Id)
				return this.lstPersonas.get(n);
		}
		
		return null;
	}
	
	@SuppressWarnings("unused")
	private void cargaListas(){
		
		cmbGrado.setInputPrompt("Grado");				
		lstGrado = valorService.obtenerLista(Constante.LISTA.CODIGO.GRADO);		
		BeanItemContainer<Valor> bicLstGrado = new BeanItemContainer<Valor>(Valor.class,  lstGrado);		
		cmbGrado.setContainerDataSource(bicLstGrado);		
		cmbGrado.setItemCaptionPropertyId("nombre");
		
		cmbUnidad.setInputPrompt("UNIDAD");				
		lstUnidad = valorService.obtenerLista(Constante.LISTA.CODIGO.UNIDAD);		
		BeanItemContainer<Valor> bicLstUnidad = new BeanItemContainer<Valor>(Valor.class,  lstUnidad);		
		cmbUnidad.setContainerDataSource(bicLstUnidad);		
		cmbUnidad.setItemCaptionPropertyId("nombre");
		
		cmbCargo.setInputPrompt("CARGO");				
		lstCargo = valorService.obtenerLista(Constante.LISTA.CODIGO.CARGO);		
		BeanItemContainer<Valor> bicLstCargo = new BeanItemContainer<Valor>(Valor.class,  lstCargo);		
		cmbCargo.setContainerDataSource(bicLstCargo);		
		cmbCargo.setItemCaptionPropertyId("nombre");
		
	}
	
	private void habilitarEdicion(boolean flag){
		flagNuevaEstado = flag;
		if(flag){
			btnAgregar.setCaption("Actualizar");
		}
		else{
			btnAgregar.setCaption("Crear");
		}
	}
	
	private void cargarPolicias(List<Policia> listPolicias, boolean flagLimpiar){
		IndexedContainer container = new IndexedContainer();
		container.addContainerProperty("id", Long.class,  null);

		container.addContainerProperty("nombres", String.class, null);
		container.addContainerProperty("ape_paterno", String.class, null);
		container.addContainerProperty("ape_materno", String.class, null);
		container.addContainerProperty("nro_documento", String.class, null);
		container.addContainerProperty("cip", String.class, null);
		
		tblPolicias.setContainerDataSource(container);
		tblPolicias.setVisibleColumns(new Object[]{"nombres", "ape_paterno", "ape_materno", "nro_documento", "cip"});
	
		tblPolicias.setColumnWidth("nombres", 105);
		tblPolicias.setColumnWidth("ape_paterno", 110);
		tblPolicias.setColumnWidth("ape_materno", 105);
		tblPolicias.setColumnWidth("nro_documento", 80);
		tblPolicias.setColumnWidth("cip", 70);
				
		tblPolicias.setColumnHeader("nombres", "Nombre");
		tblPolicias.setColumnHeader("ape_paterno", "Paterno");
		tblPolicias.setColumnHeader("ape_materno", "Materno");
		tblPolicias.setColumnHeader("nro_documento", "DNI");
		tblPolicias.setColumnHeader("cip", "CIP");
				
		int con=1;
		for (Policia p: listPolicias){
			Item item = container.addItem(con++);
			item.getItemProperty("id").setValue(p.getId());
			item.getItemProperty("nombres").setValue(p.getPersona().getNombres() );
			item.getItemProperty("ape_paterno").setValue(p.getPersona().getApePaterno());
			item.getItemProperty("ape_materno").setValue(p.getPersona().getApeMaterno());
			item.getItemProperty("nro_documento").setValue(p.getPersona().getNroDocumento() );
			item.getItemProperty("cip").setValue(p.getCip() );
		}		
		if(flagLimpiar){
			txtFiltroNombre.setValue("");
			txtFiltroApellido.setValue("");
			txtFiltroDni.setValue("");
			txtFiltroCip.setValue("");
		}
	}
	
	private void cargarWindowRegistro(Long idParte){
		pnlAgregarPersona = new PanelAgregarPersona(idParte);
		Window window=new Window(){
			
			private static final long serialVersionUID = 1L;

		      protected void close() {
		    	  //getApplication().getMainWindow().removeWindow(getWindow());
		    	  // obtener la persona del popup y pintar la lista nuevamente
		    	  
		      }
		    		      
		};
		
		//Enlazo los controles del Padre al Hijo
		this.pnlAgregarPersona.setParent_txtNumeroDocumento(this.txtNumeroDocumento);
		this.pnlAgregarPersona.setParent_cmbNombres(this.cmbNombres);
		this.pnlAgregarPersona.setParent_txtTipoDocumento(this.txtTipoDocumento);
		
		window.setCaption("Registrar Persona");
		pnlAgregarPersona.setPersona(policia.getPersona());
		
		window.addComponent(pnlAgregarPersona);
		window.setModal(true);
		window.setResizable(false);
		window.setWidth("650px");
		window.setHeight("-1px");
		getWindow().addWindow(window);		
	}
	
	@Override
	public void buttonClick(ClickEvent event) {

		if (event.getButton().equals(btnAgregarPersona)) {
			cargarWindowRegistro(1L);
		} else if (event.getButton().equals(btnAgregar)) {			
			if(flagNuevaEstado){
				actualizaPolicia();
			}
			else{
				registrarPolicia();
			}
			List<Policia> lista = policiaService.listarPolicias();
			cargarPolicias(lista, true);
		}
	}	
	
	private void registrarPolicia(){
		Usuario usuario = HarecUtil.obtenerUsuarioSesion();
		policia =  new Policia();
		policia.setPersona((Persona)cmbNombres.getValue());
		policia.setCip(txtCip.getValue().toString());
		policia.setGrado(((Valor)cmbGrado.getValue()));
		policia.setUnidad(((Valor)cmbUnidad.getValue()).getId().toString());
		policia.setCargo(((Valor)cmbCargo.getValue()));		
		policia.setCreador(usuario);
		policia.setCreacion(new Date());
		policiaService.crear(policia);
	}
	
	private void actualizaPolicia(){
		Usuario usuario = HarecUtil.obtenerUsuarioSesion();
				
		policia.setPersona((Persona)cmbNombres.getValue());
		policia.setCip(txtCip.getValue().toString());
		policia.setGrado(((Valor)cmbGrado.getValue()));
		policia.setUnidad(((Valor)cmbUnidad.getValue()).getId().toString());
		policia.setCargo(((Valor)cmbCargo.getValue()));		
		policia.setCreador(usuario);
		policia.setCreacion(new Date());
		policiaService.actualizar(policia);
	}

	@Override
	public void textChange(TextChangeEvent event) {
		Policia p= new Policia();
		p.setPersona(new Persona());

		if (event.getSource().equals(this.txtFiltroNombre)) {
			p.getPersona().setNombres(event.getText());
							
		}
		else
		if (event.getSource().equals(this.txtFiltroApellido)) {		
			p.getPersona().setApePaterno(event.getText());					
		}
		else
		if (event.getSource().equals(this.txtFiltroApellidoMaterno)) {		
			p.getPersona().setApeMaterno(event.getText());					
		}
		else
		if (event.getSource().equals(this.txtFiltroDni)) {		
			p.getPersona().setNroDocumento(event.getText());					
		}
		else
		if (event.getSource().equals(this.txtFiltroCip)) {		
			p.setCip(event.getText());					
		}
					
		List<Policia> policias = policiaService.buscar(p);
		cargarPolicias(policias, false);
	}
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// pnlPrincipal
		pnlPrincipal = buildPnlPrincipal();
		mainLayout.addComponent(pnlPrincipal);
		mainLayout.setComponentAlignment(pnlPrincipal, new Alignment(20));
		
		return mainLayout;
	}
	@AutoGenerated
	private HorizontalLayout buildPnlPrincipal() {
		// common part: create layout
		pnlPrincipal = new HorizontalLayout();
		pnlPrincipal.setStyleName("whiteBackGround");
		pnlPrincipal.setImmediate(false);
		pnlPrincipal.setWidth("-1px");
		pnlPrincipal.setHeight("400px");
		pnlPrincipal.setMargin(true);
		pnlPrincipal.setSpacing(true);
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		pnlPrincipal.addComponent(verticalLayout_2);
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		pnlPrincipal.addComponent(verticalLayout_3);
		
		return pnlPrincipal;
	}
	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("546px");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		
		// label_1
		label_1 = new Label();
		label_1.setStyleName("h2");
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Filtro de Búsqueda de Policías");
		verticalLayout_2.addComponent(label_1);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		verticalLayout_2.addComponent(horizontalLayout_2);
		
		// tblPolicias
		tblPolicias = new Table();
		tblPolicias.setImmediate(false);
		tblPolicias.setWidth("537px");
		tblPolicias.setHeight("300px");
		verticalLayout_2.addComponent(tblPolicias);
		
		return verticalLayout_2;
	}
	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		
		// txtFiltroNombre
		txtFiltroNombre = new TextField();
		txtFiltroNombre.setImmediate(false);
		txtFiltroNombre.setWidth("120px");
		txtFiltroNombre.setHeight("-1px");
		txtFiltroNombre.setInputPrompt("Nombre");
		horizontalLayout_2.addComponent(txtFiltroNombre);
		
		// txtFiltroApellido
		txtFiltroApellido = new TextField();
		txtFiltroApellido.setImmediate(false);
		txtFiltroApellido.setWidth("120px");
		txtFiltroApellido.setHeight("-1px");
		txtFiltroApellido.setInputPrompt("Apellido Paterno");
		horizontalLayout_2.addComponent(txtFiltroApellido);
		
		// txtFiltroApellidoMaterno
		txtFiltroApellidoMaterno = new TextField();
		txtFiltroApellidoMaterno.setImmediate(false);
		txtFiltroApellidoMaterno.setWidth("120px");
		txtFiltroApellidoMaterno.setHeight("-1px");
		txtFiltroApellidoMaterno.setInputPrompt("Apellido Materno");
		horizontalLayout_2.addComponent(txtFiltroApellidoMaterno);
		
		// txtFiltroDni
		txtFiltroDni = new TextField();
		txtFiltroDni.setImmediate(false);
		txtFiltroDni.setWidth("90px");
		txtFiltroDni.setHeight("-1px");
		txtFiltroDni.setInputPrompt("DNI");
		horizontalLayout_2.addComponent(txtFiltroDni);
		
		// txtFiltroCip
		txtFiltroCip = new TextField();
		txtFiltroCip.setImmediate(false);
		txtFiltroCip.setWidth("80px");
		txtFiltroCip.setHeight("-1px");
		txtFiltroCip.setInputPrompt("CIP");
		horizontalLayout_2.addComponent(txtFiltroCip);
		
		return horizontalLayout_2;
	}
	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("-1px");
		verticalLayout_3.setHeight("-1px");
		verticalLayout_3.setMargin(false);
		verticalLayout_3.setSpacing(true);
		
		// label_2
		label_2 = new Label();
		label_2.setStyleName("h2");
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Administración de Policias");
		verticalLayout_3.addComponent(label_2);
		
		// verticalLayout_4
		verticalLayout_4 = buildVerticalLayout_4();
		verticalLayout_3.addComponent(verticalLayout_4);
		
		// horizontalLayout_6
		horizontalLayout_6 = buildHorizontalLayout_6();
		verticalLayout_3.addComponent(horizontalLayout_6);
		
		// cmbUnidad
		cmbUnidad = new ComboBox();
		cmbUnidad.setCaption("Unidad");
		cmbUnidad.setImmediate(false);
		cmbUnidad.setWidth("230px");
		cmbUnidad.setHeight("-1px");
		cmbUnidad.setRequired(true);
		verticalLayout_3.addComponent(cmbUnidad);
		
		// cmbCargo
		cmbCargo = new ComboBox();
		cmbCargo.setCaption("Cargo");
		cmbCargo.setImmediate(false);
		cmbCargo.setWidth("230px");
		cmbCargo.setHeight("-1px");
		verticalLayout_3.addComponent(cmbCargo);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		verticalLayout_3.addComponent(horizontalLayout_1);
		verticalLayout_3.setComponentAlignment(horizontalLayout_1,
				new Alignment(20));
		
		return verticalLayout_3;
	}
	@AutoGenerated
	private VerticalLayout buildVerticalLayout_4() {
		// common part: create layout
		verticalLayout_4 = new VerticalLayout();
		verticalLayout_4.setImmediate(false);
		verticalLayout_4.setWidth("-1px");
		verticalLayout_4.setHeight("-1px");
		verticalLayout_4.setMargin(false);
		
		// pnlPolicia1
		pnlPolicia1 = buildPnlPolicia1();
		verticalLayout_4.addComponent(pnlPolicia1);
		
		// pnlPolicia2
		pnlPolicia2 = buildPnlPolicia2();
		verticalLayout_4.addComponent(pnlPolicia2);
		
		return verticalLayout_4;
	}
	@AutoGenerated
	private HorizontalLayout buildPnlPolicia1() {
		// common part: create layout
		pnlPolicia1 = new HorizontalLayout();
		pnlPolicia1.setImmediate(false);
		pnlPolicia1.setWidth("-1px");
		pnlPolicia1.setHeight("-1px");
		pnlPolicia1.setMargin(false);
		pnlPolicia1.setSpacing(true);
		
		// cmbNombres
		cmbNombres = new ComboBox();
		cmbNombres.setCaption("Nombres y apellidos ");
		cmbNombres.setImmediate(false);
		cmbNombres.setWidth("-1px");
		cmbNombres.setHeight("-1px");
		cmbNombres.setRequired(true);
		pnlPolicia1.addComponent(cmbNombres);
		
		// btnAgregarPersona
		btnAgregarPersona = new Button();
		btnAgregarPersona.setCaption(" ");
		btnAgregarPersona.setImmediate(true);
		btnAgregarPersona.setWidth("-1px");
		btnAgregarPersona.setHeight("-1px");
		pnlPolicia1.addComponent(btnAgregarPersona);
		pnlPolicia1.setComponentAlignment(btnAgregarPersona, new Alignment(24));
		
		return pnlPolicia1;
	}
	@AutoGenerated
	private HorizontalLayout buildPnlPolicia2() {
		// common part: create layout
		pnlPolicia2 = new HorizontalLayout();
		pnlPolicia2.setStyleName("h2");
		pnlPolicia2.setCaption("Datos de la Persona");
		pnlPolicia2.setImmediate(false);
		pnlPolicia2.setWidth("-1px");
		pnlPolicia2.setHeight("100.0%");
		pnlPolicia2.setMargin(false);
		pnlPolicia2.setSpacing(true);
		
		// txtTipoDocumento
		txtTipoDocumento = new TextField();
		txtTipoDocumento.setCaption("Tipo Doc.");
		txtTipoDocumento.setImmediate(false);
		txtTipoDocumento.setWidth("100px");
		txtTipoDocumento.setHeight("-1px");
		pnlPolicia2.addComponent(txtTipoDocumento);
		
		// txtNumeroDocumento
		txtNumeroDocumento = new TextField();
		txtNumeroDocumento.setCaption("Número");
		txtNumeroDocumento.setImmediate(false);
		txtNumeroDocumento.setWidth("120px");
		txtNumeroDocumento.setHeight("-1px");
		pnlPolicia2.addComponent(txtNumeroDocumento);
		
		return pnlPolicia2;
	}
	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_6() {
		// common part: create layout
		horizontalLayout_6 = new HorizontalLayout();
		horizontalLayout_6.setImmediate(false);
		horizontalLayout_6.setWidth("-1px");
		horizontalLayout_6.setHeight("-1px");
		horizontalLayout_6.setMargin(false);
		horizontalLayout_6.setSpacing(true);
		
		// txtCip
		txtCip = new TextField();
		txtCip.setCaption("CIP");
		txtCip.setImmediate(false);
		txtCip.setWidth("75px");
		txtCip.setHeight("-1px");
		txtCip.setRequired(true);
		horizontalLayout_6.addComponent(txtCip);
		
		// cmbGrado
		cmbGrado = new ComboBox();
		cmbGrado.setCaption("Grado");
		cmbGrado.setImmediate(false);
		cmbGrado.setWidth("150px");
		cmbGrado.setHeight("-1px");
		cmbGrado.setRequired(true);
		horizontalLayout_6.addComponent(cmbGrado);
		
		return horizontalLayout_6;
	}
	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(true);
		horizontalLayout_1.setSpacing(true);
		
		// btnAgregar
		btnAgregar = new Button();
		btnAgregar.setCaption("Agregar");
		btnAgregar.setImmediate(true);
		btnAgregar.setWidth("-1px");
		btnAgregar.setHeight("-1px");
		horizontalLayout_1.addComponent(btnAgregar);
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Eliminar");
		button_1.setImmediate(true);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		horizontalLayout_1.addComponent(button_1);
		
		return horizontalLayout_1;
	}

}
