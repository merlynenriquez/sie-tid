package pe.gob.mininter.dirandro.vaadin.panel.util;

import org.apache.commons.lang.StringUtils;

import pe.gob.mininter.dirandro.model.Organizacion;
import pe.gob.mininter.dirandro.service.OrganizacionService;
import pe.gob.mininter.dirandro.util.HarecUtil;
import pe.gob.mininter.dirandro.vaadin.dialogs.AlertDialog;
import pe.gob.mininter.dirandro.vaadin.util.Injector;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class PanelAgregarOrganizacionInteligencia extends CustomComponent implements ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout pnlPrincipal;
	@AutoGenerated
	private VerticalLayout pnl2;
	@AutoGenerated
	private VerticalLayout pnl2_1;
	@AutoGenerated
	private HorizontalLayout lytBotones;
	@AutoGenerated
	private Button btnEliminar;
	@AutoGenerated
	private Button btnGuardar;
	@AutoGenerated
	private TextField txtUbicacionActivos;
	@AutoGenerated
	private TextField txtZonaOperacion;
	@AutoGenerated
	private TextField txtNroIntegrantes;
	@AutoGenerated
	private TextField txtCampo;
	@AutoGenerated
	private TextField txtDescripcion;
	@AutoGenerated
	private TextField txtNombre;
	private Organizacion organizacion;
	private OrganizacionService organizacionService;
	
	public Organizacion getOrganizacion() {
		return organizacion;
	}
	
	public void setOrganizacion(Organizacion organizacion) {
		this.organizacion = organizacion;
	}
	
	public PanelAgregarOrganizacionInteligencia() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		organizacionService=Injector.obtenerServicio(OrganizacionService.class);
		postConstruct();
		debugId();
	}
	private void debugId(){
		
	}
	public void postConstruct() {
		
		txtNombre.setInputPrompt("Nombre");
		txtNombre.setNullRepresentation(StringUtils.EMPTY);
		txtDescripcion.setInputPrompt("Descripcion");
		txtDescripcion.setNullRepresentation(StringUtils.EMPTY);
		txtCampo.setInputPrompt("Campo");
		txtCampo.setNullRepresentation(StringUtils.EMPTY);
		txtNroIntegrantes.setInputPrompt("Nro Integrantes");
		txtNroIntegrantes.setNullRepresentation(StringUtils.EMPTY);
		txtZonaOperacion.setInputPrompt("Zona Operacion");
		txtZonaOperacion.setNullRepresentation(StringUtils.EMPTY);
		txtUbicacionActivos.setInputPrompt("Ubicacion Activos");
		txtUbicacionActivos.setNullRepresentation(StringUtils.EMPTY);
		
		btnGuardar.addListener(this);
		btnEliminar.addListener(this);
		
	}

	@Override
	public void buttonClick(ClickEvent event) {
		if(event.getButton().equals(btnGuardar)){
			organizacion=new Organizacion();
			organizacion.setNombre((String)txtNombre.getValue());
			organizacion.setDescripcion((String)txtDescripcion.getValue());
			organizacion.setCampo((String)txtCampo.getValue());
			organizacion.setNroIntegrantes(HarecUtil.toBigDecimal(txtNroIntegrantes.getValue()));
			organizacion.setZonaOperacion((String)txtZonaOperacion.getValue());
			organizacion.setUbicacionActivos((String)txtUbicacionActivos.getValue());
			organizacionService.crear(organizacion);
			
			AlertDialog alertDialog = new  AlertDialog("Registro de Organizacion", "Se ha registrado la organizacion correctamente", "Aceptar", "400");
			getApplication().getMainWindow().addWindow(alertDialog);
			
			btnGuardar.setEnabled(false);
			detach();
			getApplication().getMainWindow().removeWindow(getWindow());
		}
		if(event.getButton().equals(btnEliminar)){
			getApplication().getMainWindow().removeWindow(getWindow());
		}
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// pnlPrincipal
		pnlPrincipal = buildPnlPrincipal();
		mainLayout.addComponent(pnlPrincipal);
		
		return mainLayout;
	}
	@AutoGenerated
	private HorizontalLayout buildPnlPrincipal() {
		// common part: create layout
		pnlPrincipal = new HorizontalLayout();
		pnlPrincipal.setStyleName("whiteBackGround");
		pnlPrincipal.setImmediate(false);
		pnlPrincipal.setWidth("-1px");
		pnlPrincipal.setHeight("-1px");
		pnlPrincipal.setMargin(true);
		
		// pnl2
		pnl2 = buildPnl2();
		pnlPrincipal.addComponent(pnl2);
		
		return pnlPrincipal;
	}
	@AutoGenerated
	private VerticalLayout buildPnl2() {
		// common part: create layout
		pnl2 = new VerticalLayout();
		pnl2.setImmediate(false);
		pnl2.setWidth("-1px");
		pnl2.setHeight("-1px");
		pnl2.setMargin(false);
		pnl2.setSpacing(true);
		
		// pnl2_1
		pnl2_1 = buildPnl2_1();
		pnl2.addComponent(pnl2_1);
		
		return pnl2;
	}
	@AutoGenerated
	private VerticalLayout buildPnl2_1() {
		// common part: create layout
		pnl2_1 = new VerticalLayout();
		pnl2_1.setImmediate(false);
		pnl2_1.setWidth("-1px");
		pnl2_1.setHeight("-1px");
		pnl2_1.setMargin(false);
		pnl2_1.setSpacing(true);
		
		// txtNombre
		txtNombre = new TextField();
		txtNombre.setCaption("Nombre");
		txtNombre.setImmediate(false);
		txtNombre.setWidth("300px");
		txtNombre.setHeight("-1px");
		pnl2_1.addComponent(txtNombre);
		
		// txtDescripcion
		txtDescripcion = new TextField();
		txtDescripcion.setCaption("Descripcion");
		txtDescripcion.setImmediate(false);
		txtDescripcion.setWidth("300px");
		txtDescripcion.setHeight("-1px");
		pnl2_1.addComponent(txtDescripcion);
		
		// txtCampo
		txtCampo = new TextField();
		txtCampo.setCaption("Campo");
		txtCampo.setImmediate(false);
		txtCampo.setWidth("300px");
		txtCampo.setHeight("-1px");
		pnl2_1.addComponent(txtCampo);
		
		// txtNroIntegrantes
		txtNroIntegrantes = new TextField();
		txtNroIntegrantes.setCaption("Nro Integrantes");
		txtNroIntegrantes.setImmediate(false);
		txtNroIntegrantes.setWidth("300px");
		txtNroIntegrantes.setHeight("-1px");
		pnl2_1.addComponent(txtNroIntegrantes);
		
		// txtZonaOperacion
		txtZonaOperacion = new TextField();
		txtZonaOperacion.setCaption("Zona Operacion");
		txtZonaOperacion.setImmediate(false);
		txtZonaOperacion.setWidth("300px");
		txtZonaOperacion.setHeight("-1px");
		pnl2_1.addComponent(txtZonaOperacion);
		
		// txtUbicacionActivos
		txtUbicacionActivos = new TextField();
		txtUbicacionActivos.setCaption("Ubicacion Activos");
		txtUbicacionActivos.setImmediate(false);
		txtUbicacionActivos.setWidth("300px");
		txtUbicacionActivos.setHeight("-1px");
		pnl2_1.addComponent(txtUbicacionActivos);
		
		// lytBotones
		lytBotones = buildLytBotones();
		pnl2_1.addComponent(lytBotones);
		pnl2_1.setComponentAlignment(lytBotones, new Alignment(20));
		
		return pnl2_1;
	}
	@AutoGenerated
	private HorizontalLayout buildLytBotones() {
		// common part: create layout
		lytBotones = new HorizontalLayout();
		lytBotones.setImmediate(false);
		lytBotones.setWidth("-1px");
		lytBotones.setHeight("-1px");
		lytBotones.setMargin(false);
		lytBotones.setSpacing(true);
		
		// btnGuardar
		btnGuardar = new Button();
		btnGuardar.setCaption("Grabar");
		btnGuardar.setImmediate(true);
		btnGuardar.setWidth("-1px");
		btnGuardar.setHeight("-1px");
		lytBotones.addComponent(btnGuardar);
		
		// btnEliminar
		btnEliminar = new Button();
		btnEliminar.setCaption("Cancelar");
		btnEliminar.setImmediate(true);
		btnEliminar.setWidth("-1px");
		btnEliminar.setHeight("-1px");
		lytBotones.addComponent(btnEliminar);
		
		return lytBotones;
	}

}
