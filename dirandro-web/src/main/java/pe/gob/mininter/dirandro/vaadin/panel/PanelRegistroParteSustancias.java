package pe.gob.mininter.dirandro.vaadin.panel;

import java.math.BigDecimal;
import java.util.List;

import org.apache.commons.lang.StringUtils;

import pe.gob.mininter.dirandro.model.Dependencia;
import pe.gob.mininter.dirandro.model.Documento;
import pe.gob.mininter.dirandro.model.Droga;
import pe.gob.mininter.dirandro.model.Expediente;
import pe.gob.mininter.dirandro.model.ModeloMarca;
import pe.gob.mininter.dirandro.model.Pais;
import pe.gob.mininter.dirandro.model.Ruta;
import pe.gob.mininter.dirandro.service.DrogaService;
import pe.gob.mininter.dirandro.service.ModeloMarcaService;
import pe.gob.mininter.dirandro.service.PaisService;
import pe.gob.mininter.dirandro.util.Constante;
import pe.gob.mininter.dirandro.vaadin.util.ComboBoxLOVS;
import pe.gob.mininter.dirandro.vaadin.util.Injector;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.ui.AbstractSelect.ItemDescriptionGenerator;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class PanelRegistroParteSustancias extends CustomComponent implements
		ClickListener, ItemDescriptionGenerator {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private VerticalLayout verticalLayout_2;

	@AutoGenerated
	private Table tblSustancias;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_31;

	@AutoGenerated
	private Button btnDrRegistrar;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_19;

	@AutoGenerated
	private TextArea txtDrObservaciones;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_17;

	@AutoGenerated
	private ComboBox cmbDestino;

	@AutoGenerated
	private ComboBox cmbProcedencia;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_16;

	@AutoGenerated
	private TextField txtDrTipoCambio;

	@AutoGenerated
	private TextField txtDrValorDolares;

	@AutoGenerated
	private TextField txtDrValorSoles;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_15;

	@AutoGenerated
	private TextField txtDrPesoMuestra;

	@AutoGenerated
	private ComboBox cmbDrMedidaMuestra;

	@AutoGenerated
	private ComboBoxLOVS cmbDrSituacion;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_14;

	@AutoGenerated
	private TextField txtPesoNeto;

	@AutoGenerated
	private TextField txtDrPesoBruto;

	@AutoGenerated
	private ComboBox cmbDrTipoMedida;

	@AutoGenerated
	private ComboBoxLOVS cmbDrTipoDroga;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = -2727080337351223030L;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private ModeloMarcaService modeloMarcaService;
	private PaisService paisService;
	private DrogaService drogaService;

	private Expediente expediente;

	private IndexedContainer container;

	private static final String COLUMN_TIPO_DROGA = "COLUMN_TIPO_DROGA";
	private static final String COLUMN_TIPO_MEDIDA = "COLUMN_TIPO_MEDIDA";
	private static final String COLUMN_PESO_BRUTO = "COLUMN_PESO_BRUTO";
	private static final String COLUMN_PESO_NETO = "COLUMN_PESO_NETO";
	private static final String COLUMN_SITUACION = "COLUMN_SITUACION";
	private static final String COLUMN_MEDIDA_MUESTRA = "COLUMN_MEDIDA_MUESTRA";
	private static final String COLUMN_SOLES = "COLUMN_SOLES";
	private static final String COLUMN_DOLARES = "COLUMN_DOLARES";
	private static final String COLUMN_CAMBIO = "COLUMN_CAMBIO";
	private static final String COLUMN_PROCEDENCIA = "COLUMN_PROCEDENCIA";
	private static final String COLUMN_DESTINO = "COLUMN_DESTINO";
	private static final String COLUMN_DROGA = "COLUMN_DROGA";

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public PanelRegistroParteSustancias() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		postConstruct();
	}

	public void postConstruct() {

		modeloMarcaService = Injector.obtenerServicio(ModeloMarcaService.class);
		paisService = Injector.obtenerServicio(PaisService.class);
		drogaService = Injector.obtenerServicio(DrogaService.class);

		cmbDrTipoDroga.setCodigoLista(Constante.LISTA.CODIGO.TIPO_DROGA);
		cmbDrSituacion.setCodigoLista(Constante.LISTA.CODIGO.SITUACION_GENERAL);

		List<ModeloMarca> modeloMarcas = modeloMarcaService.listarMarcas();
		List<Pais> paises = paisService.buscar(new Pais());

		cargarCmbDrTipoMedida(modeloMarcas);
		cargarCmbDrMedidaMuestra(modeloMarcas);
		cargarCmbProcedencia(paises);
		cargarCmbDestino(paises);

		containerTabla();

		btnDrRegistrar.addListener((ClickListener) this);
	}

	@Override
	public void attach() {
		super.attach();
		if (expediente != null && !expediente.esNuevo()) {
			cargarDrogas();
		}
	}

	private void containerTabla() {

		this.container = new IndexedContainer();

		container.addContainerProperty(COLUMN_TIPO_DROGA, String.class, null);
		container.addContainerProperty(COLUMN_TIPO_MEDIDA, String.class, null);
		container.addContainerProperty(COLUMN_PESO_BRUTO, BigDecimal.class,
				null);
		container
				.addContainerProperty(COLUMN_PESO_NETO, BigDecimal.class, null);
		container.addContainerProperty(COLUMN_SITUACION, String.class, null);
		container.addContainerProperty(COLUMN_MEDIDA_MUESTRA, String.class,
				null);
		container.addContainerProperty(COLUMN_SOLES, BigDecimal.class, null);
		container.addContainerProperty(COLUMN_DOLARES, BigDecimal.class, null);
		container.addContainerProperty(COLUMN_CAMBIO, BigDecimal.class, null);
		container.addContainerProperty(COLUMN_PROCEDENCIA, String.class, null);
		container.addContainerProperty(COLUMN_DESTINO, String.class, null);
		container.addContainerProperty(COLUMN_DROGA, Droga.class, null);

		tblSustancias.setContainerDataSource(container);

		tblSustancias.setColumnHeader(COLUMN_TIPO_DROGA, "Tipo Droga");
		tblSustancias.setColumnHeader(COLUMN_TIPO_MEDIDA, "Tipo Medida");
		tblSustancias.setColumnHeader(COLUMN_PESO_BRUTO, "P. Bruto");
		tblSustancias.setColumnHeader(COLUMN_PESO_NETO, "P. Neto");
		tblSustancias.setColumnHeader(COLUMN_SITUACION, "Situaci√≥n");
		tblSustancias.setColumnHeader(COLUMN_MEDIDA_MUESTRA, "Medida Muestra");
		tblSustancias.setColumnHeader(COLUMN_SOLES, "Soles");
		tblSustancias.setColumnHeader(COLUMN_DOLARES, "Dolares");
		tblSustancias.setColumnHeader(COLUMN_CAMBIO, "Cambio");
		tblSustancias.setColumnHeader(COLUMN_PROCEDENCIA, "Procedencia");
		tblSustancias.setColumnHeader(COLUMN_DESTINO, "Destino");

		tblSustancias.setVisibleColumns(new Object[] { COLUMN_TIPO_DROGA,
				COLUMN_TIPO_MEDIDA, COLUMN_PESO_BRUTO, COLUMN_PESO_NETO,
				COLUMN_SITUACION, COLUMN_MEDIDA_MUESTRA, COLUMN_SOLES,
				COLUMN_DOLARES, COLUMN_CAMBIO, COLUMN_PROCEDENCIA,
				COLUMN_DESTINO });

		tblSustancias.setColumnWidth(COLUMN_TIPO_DROGA, 100);
		tblSustancias.setColumnWidth(COLUMN_TIPO_MEDIDA, 100);
		tblSustancias.setColumnWidth(COLUMN_PESO_BRUTO, 45);
		tblSustancias.setColumnWidth(COLUMN_PESO_NETO, 45);
		tblSustancias.setColumnWidth(COLUMN_SITUACION, 100);
		tblSustancias.setColumnWidth(COLUMN_MEDIDA_MUESTRA, 100);
		tblSustancias.setColumnWidth(COLUMN_SOLES, 45);
		tblSustancias.setColumnWidth(COLUMN_DOLARES, 45);
		tblSustancias.setColumnWidth(COLUMN_CAMBIO, 45);
		tblSustancias.setColumnWidth(COLUMN_PROCEDENCIA, 100);
		tblSustancias.setColumnWidth(COLUMN_DESTINO, 100);
		
		tblSustancias.setItemDescriptionGenerator( (ItemDescriptionGenerator) this);

	}
	
	@Override
	public String generateDescription(Component source, Object itemId,
			Object propertyId) {
		Item item=tblSustancias.getItem(itemId);
		Droga droga = (Droga) item.getItemProperty(COLUMN_DROGA).getValue();
		return droga.getObservacion();
	}

	private void cargarDrogas() {
		List<Droga> drogas = drogaService.obtenerDrogasExpediente(expediente);

		container.removeAllItems();

		for (Droga droga : drogas) {
			Item item = container.addItem(droga.getId());
			item.getItemProperty(COLUMN_TIPO_DROGA).setValue(droga.getTipoDroga().getNombre());
			item.getItemProperty(COLUMN_TIPO_MEDIDA).setValue(droga.getTipoMedida().getNombre());
			item.getItemProperty(COLUMN_PESO_BRUTO).setValue(droga.getPesoBruto());
			item.getItemProperty(COLUMN_PESO_NETO).setValue(droga.getPesoNeto());
			item.getItemProperty(COLUMN_SITUACION).setValue(droga.getSituaccion().getNombre());
			item.getItemProperty(COLUMN_MEDIDA_MUESTRA).setValue(droga.getTipoMedidaMuestra().getNombre());
			item.getItemProperty(COLUMN_SOLES).setValue(droga.getValorSoles());
			item.getItemProperty(COLUMN_DOLARES).setValue(droga.getValorDolares());
			item.getItemProperty(COLUMN_CAMBIO).setValue(droga.getTipoCambio());
			item.getItemProperty(COLUMN_PROCEDENCIA).setValue(droga.getProcedencia().getNombre());
			item.getItemProperty(COLUMN_DESTINO).setValue(droga.getDestino().getNombre());
			item.getItemProperty(COLUMN_DROGA).setValue(droga);
		}

	}

	private void cargarCmbDrTipoMedida(List<ModeloMarca> modeloMarcas) {
		BeanItemContainer<ModeloMarca> containerModeloMarca = new BeanItemContainer<ModeloMarca>(
				ModeloMarca.class, modeloMarcas);
		cmbDrTipoMedida.setContainerDataSource(containerModeloMarca);
		cmbDrTipoMedida.setItemCaptionPropertyId("nombre");
	}

	private void cargarCmbDrMedidaMuestra(List<ModeloMarca> modeloMarcas) {
		BeanItemContainer<ModeloMarca> containerModeloMarca = new BeanItemContainer<ModeloMarca>(
				ModeloMarca.class, modeloMarcas);
		cmbDrMedidaMuestra.setContainerDataSource(containerModeloMarca);
		cmbDrMedidaMuestra.setItemCaptionPropertyId("nombre");
	}

	private void cargarCmbProcedencia(List<Pais> paises) {
		BeanItemContainer<Pais> containerPaises = new BeanItemContainer<Pais>(
				Pais.class, paises);
		cmbProcedencia.setContainerDataSource(containerPaises);
		cmbProcedencia.setItemCaptionPropertyId("nombre");
	}

	private void cargarCmbDestino(List<Pais> paises) {
		BeanItemContainer<Pais> containerPaises = new BeanItemContainer<Pais>(
				Pais.class, paises);
		cmbDestino.setContainerDataSource(containerPaises);
		cmbDestino.setItemCaptionPropertyId("nombre");
	}

	@Override
	public void buttonClick(ClickEvent event) {
		if (btnDrRegistrar.equals(event.getButton())) {
			buttonClickBtnDrRegistrar();
		}
	}

	private void buttonClickBtnDrRegistrar() {
		Droga droga = new Droga();
		droga.setTipoDroga(cmbDrTipoDroga.getValor());
		droga.setTipoMedida((ModeloMarca)cmbDrTipoMedida.getValue());
		droga.setPesoBruto(Double.valueOf((String)txtDrPesoBruto.getValue()));
		droga.setPesoNeto(Double.valueOf((String)txtPesoNeto.getValue()));
		droga.setExpediente(expediente);
		droga.setSituaccion(cmbDrSituacion.getValor());
		droga.setTipoMedidaMuestra((ModeloMarca)cmbDrMedidaMuestra.getValue());
		droga.setPesoMuestra(Double.valueOf((String)txtDrPesoMuestra.getValue()));
		droga.setValorSoles((Double.valueOf((String)txtDrValorSoles.getValue())));
		droga.setValorDolares(Double.valueOf((String)txtDrValorDolares.getValue()));
		droga.setTipoCambio(Double.valueOf((String)txtDrTipoCambio.getValue()));
		droga.setProcedencia( (Pais) cmbProcedencia.getValue() );
		droga.setDestino( (Pais) cmbDestino.getValue() );
		droga.setObservacion((String)txtDrObservaciones.getValue());
		
		drogaService.crear(droga);
		
		cargarDrogas();
		
		limpiar();
	}

	private void limpiar() {
		cmbDrTipoDroga.select(null);	
		cmbDrTipoMedida.select(null);
		txtDrPesoBruto.setValue(StringUtils.EMPTY);
		txtPesoNeto.setValue(StringUtils.EMPTY);
		txtPesoNeto.setValue(StringUtils.EMPTY);
		cmbDrSituacion.select(null);
		cmbDrMedidaMuestra.select(null);
		txtDrPesoMuestra.setValue(StringUtils.EMPTY);
		txtDrValorSoles.setValue(StringUtils.EMPTY);
		txtDrValorDolares.setValue(StringUtils.EMPTY);
		txtDrTipoCambio.setValue(StringUtils.EMPTY);
		cmbProcedencia.select(null);
		cmbDestino.select(null);
		txtDrObservaciones.setValue(StringUtils.EMPTY);
	}

	public Expediente getExpediente() {
		return expediente;
	}

	public void setExpediente(Expediente expediente) {
		this.expediente = expediente;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		mainLayout.addComponent(verticalLayout_2);
		mainLayout.setComponentAlignment(verticalLayout_2, new Alignment(20));

		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("-1px");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(true);
		verticalLayout_2.setSpacing(true);

		// horizontalLayout_14
		horizontalLayout_14 = buildHorizontalLayout_14();
		verticalLayout_2.addComponent(horizontalLayout_14);

		// horizontalLayout_15
		horizontalLayout_15 = buildHorizontalLayout_15();
		verticalLayout_2.addComponent(horizontalLayout_15);

		// horizontalLayout_16
		horizontalLayout_16 = buildHorizontalLayout_16();
		verticalLayout_2.addComponent(horizontalLayout_16);

		// horizontalLayout_17
		horizontalLayout_17 = buildHorizontalLayout_17();
		verticalLayout_2.addComponent(horizontalLayout_17);

		// horizontalLayout_19
		horizontalLayout_19 = buildHorizontalLayout_19();
		verticalLayout_2.addComponent(horizontalLayout_19);

		// horizontalLayout_31
		horizontalLayout_31 = buildHorizontalLayout_31();
		verticalLayout_2.addComponent(horizontalLayout_31);
		verticalLayout_2.setComponentAlignment(horizontalLayout_31,
				new Alignment(20));

		// tblSustancias
		tblSustancias = new Table();
		tblSustancias.setImmediate(false);
		tblSustancias.setWidth("800px");
		tblSustancias.setHeight("-1px");
		verticalLayout_2.addComponent(tblSustancias);

		return verticalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_14() {
		// common part: create layout
		horizontalLayout_14 = new HorizontalLayout();
		horizontalLayout_14.setImmediate(false);
		horizontalLayout_14.setWidth("-1px");
		horizontalLayout_14.setHeight("-1px");
		horizontalLayout_14.setMargin(false);
		horizontalLayout_14.setSpacing(true);

		// cmbDrTipoDroga
		cmbDrTipoDroga = new ComboBoxLOVS();
		cmbDrTipoDroga.setCaption("Tipo de Droga");
		cmbDrTipoDroga.setImmediate(false);
		cmbDrTipoDroga.setWidth("-1px");
		cmbDrTipoDroga.setHeight("-1px");
		cmbDrTipoDroga.setRequired(true);
		horizontalLayout_14.addComponent(cmbDrTipoDroga);

		// cmbDrTipoMedida
		cmbDrTipoMedida = new ComboBox();
		cmbDrTipoMedida.setCaption("Tipo de Medida");
		cmbDrTipoMedida.setImmediate(false);
		cmbDrTipoMedida.setWidth("-1px");
		cmbDrTipoMedida.setHeight("-1px");
		horizontalLayout_14.addComponent(cmbDrTipoMedida);

		// txtDrPesoBruto
		txtDrPesoBruto = new TextField();
		txtDrPesoBruto.setCaption("Peso bruto");
		txtDrPesoBruto.setImmediate(false);
		txtDrPesoBruto.setWidth("-1px");
		txtDrPesoBruto.setHeight("-1px");
		txtDrPesoBruto.setInputPrompt("Peso Bruto");
		txtDrPesoBruto.setSecret(false);
		horizontalLayout_14.addComponent(txtDrPesoBruto);

		// txtPesoNeto
		txtPesoNeto = new TextField();
		txtPesoNeto.setCaption("Peso neto");
		txtPesoNeto.setImmediate(false);
		txtPesoNeto.setWidth("-1px");
		txtPesoNeto.setHeight("-1px");
		txtPesoNeto.setInputPrompt("Peso Neto");
		txtPesoNeto.setSecret(false);
		horizontalLayout_14.addComponent(txtPesoNeto);

		return horizontalLayout_14;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_15() {
		// common part: create layout
		horizontalLayout_15 = new HorizontalLayout();
		horizontalLayout_15.setImmediate(false);
		horizontalLayout_15.setWidth("-1px");
		horizontalLayout_15.setHeight("-1px");
		horizontalLayout_15.setMargin(false);
		horizontalLayout_15.setSpacing(true);

		// cmbDrSituacion
		cmbDrSituacion = new ComboBoxLOVS();
		cmbDrSituacion.setCaption("Situacion");
		cmbDrSituacion.setImmediate(false);
		cmbDrSituacion.setWidth("-1px");
		cmbDrSituacion.setHeight("-1px");
		horizontalLayout_15.addComponent(cmbDrSituacion);

		// cmbDrMedidaMuestra
		cmbDrMedidaMuestra = new ComboBox();
		cmbDrMedidaMuestra.setCaption("Medida de la Muestra");
		cmbDrMedidaMuestra.setImmediate(false);
		cmbDrMedidaMuestra.setWidth("-1px");
		cmbDrMedidaMuestra.setHeight("-1px");
		horizontalLayout_15.addComponent(cmbDrMedidaMuestra);

		// txtDrPesoMuestra
		txtDrPesoMuestra = new TextField();
		txtDrPesoMuestra.setCaption("Peso de la muestra");
		txtDrPesoMuestra.setImmediate(false);
		txtDrPesoMuestra.setWidth("-1px");
		txtDrPesoMuestra.setHeight("-1px");
		txtDrPesoMuestra.setInputPrompt("Peso de la muestra");
		horizontalLayout_15.addComponent(txtDrPesoMuestra);

		return horizontalLayout_15;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_16() {
		// common part: create layout
		horizontalLayout_16 = new HorizontalLayout();
		horizontalLayout_16.setImmediate(false);
		horizontalLayout_16.setWidth("-1px");
		horizontalLayout_16.setHeight("-1px");
		horizontalLayout_16.setMargin(false);
		horizontalLayout_16.setSpacing(true);

		// txtDrValorSoles
		txtDrValorSoles = new TextField();
		txtDrValorSoles.setCaption("Valor en Soles");
		txtDrValorSoles.setImmediate(false);
		txtDrValorSoles.setWidth("155px");
		txtDrValorSoles.setHeight("-1px");
		txtDrValorSoles.setInputPrompt("Valor en Soles");
		txtDrValorSoles.setSecret(false);
		horizontalLayout_16.addComponent(txtDrValorSoles);

		// txtDrValorDolares
		txtDrValorDolares = new TextField();
		txtDrValorDolares.setCaption("Valor en Dolares");
		txtDrValorDolares.setImmediate(false);
		txtDrValorDolares.setWidth("155px");
		txtDrValorDolares.setHeight("-1px");
		txtDrValorDolares.setInputPrompt("Valor en Dolares");
		txtDrValorDolares.setSecret(false);
		horizontalLayout_16.addComponent(txtDrValorDolares);

		// txtDrTipoCambio
		txtDrTipoCambio = new TextField();
		txtDrTipoCambio.setCaption("Tipo de Cambio");
		txtDrTipoCambio.setImmediate(false);
		txtDrTipoCambio.setWidth("155px");
		txtDrTipoCambio.setHeight("-1px");
		txtDrTipoCambio.setInputPrompt("Tipo de Cambio");
		txtDrTipoCambio.setSecret(false);
		horizontalLayout_16.addComponent(txtDrTipoCambio);

		return horizontalLayout_16;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_17() {
		// common part: create layout
		horizontalLayout_17 = new HorizontalLayout();
		horizontalLayout_17.setImmediate(false);
		horizontalLayout_17.setWidth("-1px");
		horizontalLayout_17.setHeight("-1px");
		horizontalLayout_17.setMargin(false);
		horizontalLayout_17.setSpacing(true);

		// cmbProcedencia
		cmbProcedencia = new ComboBox();
		cmbProcedencia.setCaption("Procedencia");
		cmbProcedencia.setImmediate(false);
		cmbProcedencia.setWidth("300px");
		cmbProcedencia.setHeight("-1px");
		horizontalLayout_17.addComponent(cmbProcedencia);

		// cmbDestino
		cmbDestino = new ComboBox();
		cmbDestino.setCaption("Destino");
		cmbDestino.setImmediate(false);
		cmbDestino.setWidth("300px");
		cmbDestino.setHeight("-1px");
		horizontalLayout_17.addComponent(cmbDestino);

		return horizontalLayout_17;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_19() {
		// common part: create layout
		horizontalLayout_19 = new HorizontalLayout();
		horizontalLayout_19.setImmediate(false);
		horizontalLayout_19.setWidth("-1px");
		horizontalLayout_19.setHeight("-1px");
		horizontalLayout_19.setMargin(false);

		// txtDrObservaciones
		txtDrObservaciones = new TextArea();
		txtDrObservaciones.setCaption("Observaciones");
		txtDrObservaciones.setImmediate(false);
		txtDrObservaciones.setWidth("800px");
		txtDrObservaciones.setHeight("-1px");
		txtDrObservaciones.setInputPrompt("Observaciones");
		txtDrObservaciones.setMaxLength(500);
		horizontalLayout_19.addComponent(txtDrObservaciones);

		return horizontalLayout_19;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_31() {
		// common part: create layout
		horizontalLayout_31 = new HorizontalLayout();
		horizontalLayout_31.setImmediate(false);
		horizontalLayout_31.setWidth("-1px");
		horizontalLayout_31.setHeight("-1px");
		horizontalLayout_31.setMargin(false);

		// btnDrRegistrar
		btnDrRegistrar = new Button();
		btnDrRegistrar.setCaption("Registrar");
		btnDrRegistrar.setImmediate(true);
		btnDrRegistrar.setWidth("-1px");
		btnDrRegistrar.setHeight("-1px");
		horizontalLayout_31.addComponent(btnDrRegistrar);

		return horizontalLayout_31;
	}

}
