package pe.gob.mininter.dirandro.vaadin.panel;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;

import pe.gob.mininter.dirandro.model.Opcion;
import pe.gob.mininter.dirandro.model.Persona;
import pe.gob.mininter.dirandro.model.Valor;
import pe.gob.mininter.dirandro.vaadin.util.HarecComponent;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.AbstractBeanContainer.BeanIdResolver;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.NativeSelect;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class panelBuscaPersona extends HarecComponent implements ClickListener{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private Table tblpersonas;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_4;
	@AutoGenerated
	private Button btnAgregar;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;
	@AutoGenerated
	private Button button_1;
	@AutoGenerated
	private TextField txtnro;
	@AutoGenerated
	private NativeSelect cbotdoc;
	@AutoGenerated
	private Label dni;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private TextField txtnombres;
	@AutoGenerated
	private Label nombre;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public panelBuscaPersona(List<Opcion> acciones, String height) {
		super(acciones, height);
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postConstruct();
		debugId();
	}
	
	private void debugId(){
		
	}
	
	public void postConstruct() {
	txtnro.setValue("41564250");
	List<Persona> personas = null;
	Persona e= new Persona();
	e.setId(Long.parseLong("1"));
	e.setApePaterno("Campos");
	e.setApeMaterno("Mori");
	e.setNombres("Melissa");
	Valor dni= new Valor();
	dni.setCodigo("L");
	dni.setDescripcion("Document de identidad");
	dni.setNombre("DNI");
	e.setTipoDocumento(dni);
	e.setNroDocumento("22334446");
	e.setSexo("femenino");
	/*
	Valor sexo= new Valor();
	sexo.setCodigo("m");
	sexo.setNombre("femenino");*/
	Calendar calendario = GregorianCalendar.getInstance();
	Date fecha = calendario.getTime();
	e.setFecNacimiento(fecha);
	Valor estadoCivil= new Valor();
	estadoCivil.setCodigo("8");
	estadoCivil.setNombre("Divorciada");
	e.setEstadoCivil(estadoCivil);
	personas=new ArrayList<Persona>();
	
	personas.add(e);
	
	cargarListas(personas, true);
	
	List<Valor> tipodocs = null;
	Valor v= new Valor();
	v.setCodigo("1");
	v.setNombre("DNI");
	tipodocs=new ArrayList<Valor>();
	tipodocs.add(v);
	cargarListaTd(tipodocs, true);
	
	btnAgregar.addListener((ClickListener)this);
	
	}
	
	private void cargarListaTd(List<Valor> tipodocs, boolean flagLimpiar)
	{
		BeanItemContainer<Valor> bicListas = new BeanItemContainer<Valor>(Valor.class,  tipodocs);
		//cbotdoc.seti("Lista");
		System.out.println("dato "+bicListas.size());
		cbotdoc.setContainerDataSource(bicListas);
		cbotdoc.setItemCaptionPropertyId("nombre");
		
		/*
		if(flagLimpiar)
		{
			txtFiltroIdLista.setValue("");
			txtFiltroCodigoLista.setValue("");
			txtFiltroNombreLista.setValue("");
			txtFiltroEstadoLista.setValue("");
		}
		*/
	}
	private void cargarListas(List<Persona> personas, boolean flagLimpiar)
	{
		BeanContainer<Long, Persona> container=new BeanContainer<Long, Persona>(Persona.class);
		container.setBeanIdResolver(new BeanIdResolver<Long, Persona>() {

			/**
			 * 
			 */
			private static final long serialVersionUID = 1609951986289481102L;

			@Override
			public Long getIdForBean(Persona bean) {
				return bean.getId();
			}
			
		});
		container.addAll(personas);
		container.setBeanIdProperty("id");
		
		
		tblpersonas.setContainerDataSource(container);
		tblpersonas.setVisibleColumns(new Object[]{"apePaterno", "apeMaterno", "nombres"});
		tblpersonas.setColumnWidth("id", 16);
		tblpersonas.setColumnWidth("apePaterno", 147);
		tblpersonas.setColumnWidth("apeMaterno", 218);
		tblpersonas.setColumnWidth("nombres", 318);
		tblpersonas.setColumnHeader("id", "Id");
		tblpersonas.setColumnHeader("apePaterno", "Paterno");
		tblpersonas.setColumnHeader("apeMaterno", "Materno");
		tblpersonas.setColumnHeader("nombres", "Nombres");
		
		/*
		if(flagLimpiar)
		{
			txtFiltroIdLista.setValue("");
			txtFiltroCodigoLista.setValue("");
			txtFiltroNombreLista.setValue("");
			txtFiltroEstadoLista.setValue("");
		}
		*/
	}
	
	
	
	
	
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		mainLayout.addComponent(horizontalLayout_3);
		
		// horizontalLayout_4
		horizontalLayout_4 = buildHorizontalLayout_4();
		mainLayout.addComponent(horizontalLayout_4);
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		mainLayout.addComponent(verticalLayout_2);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("420px");
		horizontalLayout_1.setHeight("24px");
		horizontalLayout_1.setMargin(false);
		
		// nombre
		nombre = new Label();
		nombre.setImmediate(false);
		nombre.setWidth("39.32%");
		nombre.setHeight("18px");
		nombre.setValue("Nombre o Apellido");
		horizontalLayout_1.addComponent(nombre);
		horizontalLayout_1.setExpandRatio(nombre, 1.0f);
		horizontalLayout_1.setComponentAlignment(nombre, new Alignment(48));
		
		// txtnombres
		txtnombres = new TextField();
		txtnombres.setImmediate(false);
		txtnombres.setWidth("-1px");
		txtnombres.setHeight("-1px");
		horizontalLayout_1.addComponent(txtnombres);
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("460px");
		horizontalLayout_3.setHeight("28px");
		horizontalLayout_3.setMargin(false);
		
		// dni
		dni = new Label();
		dni.setImmediate(false);
		dni.setWidth("160px");
		dni.setHeight("-1px");
		dni.setValue("Documento Identidad");
		horizontalLayout_3.addComponent(dni);
		horizontalLayout_3.setComponentAlignment(dni, new Alignment(48));
		
		// cbotdoc
		cbotdoc = new NativeSelect();
		cbotdoc.setImmediate(false);
		cbotdoc.setWidth("-1px");
		cbotdoc.setHeight("-1px");
		horizontalLayout_3.addComponent(cbotdoc);
		
		// txtnro
		txtnro = new TextField();
		txtnro.setImmediate(false);
		txtnro.setWidth("-1px");
		txtnro.setHeight("-1px");
		horizontalLayout_3.addComponent(txtnro);
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Buscar");
		button_1.setImmediate(true);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		horizontalLayout_3.addComponent(button_1);
		
		return horizontalLayout_3;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_4() {
		// common part: create layout
		horizontalLayout_4 = new HorizontalLayout();
		horizontalLayout_4.setImmediate(false);
		horizontalLayout_4.setWidth("-1px");
		horizontalLayout_4.setHeight("-1px");
		horizontalLayout_4.setMargin(false);
		
		// btnAgregar
		btnAgregar = new Button();
		btnAgregar.setCaption("Agregar");
		btnAgregar.setImmediate(true);
		btnAgregar.setWidth("-1px");
		btnAgregar.setHeight("-1px");
		horizontalLayout_4.addComponent(btnAgregar);
		
		return horizontalLayout_4;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("480px");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		
		// tblpersonas
		tblpersonas = new Table();
		tblpersonas.setImmediate(false);
		tblpersonas.setWidth("-1px");
		tblpersonas.setHeight("-1px");
		verticalLayout_2.addComponent(tblpersonas);
		
		return verticalLayout_2;
	}
	
	@Override
	public void buttonClick(ClickEvent event) {
		String titulo = "Sin t√≠tulo";
		String width = "-1.0";
		HarecComponent harecComponent = null;
		
		if(event.getButton().equals(btnAgregar)){
			
			titulo = "Agregar Persona";
			width = "950px";
			//harecComponent = new panelAgregarPersona(acciones, "340px");
			/*
			Lista lista = new Lista();
			lista.setCodigo((String)txtCodigoLista.getValue());
			lista.setNombre((String)txtNombreLista.getValue());
			lista.setDescripcion((String)txtDescirpcionLista.getValue());
			lista.setEstado((String)cbmEstadoLista.getValue());

			if (flagNuevoLista) {
				listaService.crear(lista);
			}
			else{
				lista.setId(Long.parseLong(lblIdLista.getValue().toString()));
				listaService.actualizar(lista);
			}
			refrescar("lista");
			*/
		}
	}	
	
	
	
	

}
