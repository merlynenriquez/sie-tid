package pe.gob.mininter.dirandro.vaadin.panel;

import java.math.BigDecimal;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import pe.gob.mininter.dirandro.model.Distrito;
import pe.gob.mininter.dirandro.model.Entidad;
import pe.gob.mininter.dirandro.model.Opcion;
import pe.gob.mininter.dirandro.model.Valor;
import pe.gob.mininter.dirandro.service.EntidadService;
import pe.gob.mininter.dirandro.service.UbigeoService;
import pe.gob.mininter.dirandro.service.ValorService;
import pe.gob.mininter.dirandro.util.Constante;
import pe.gob.mininter.dirandro.vaadin.util.DirandroComponent;
import pe.gob.mininter.dirandro.vaadin.util.Injector;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.ui.AbstractSelect.Filtering;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class PanelMantenEntidad extends DirandroComponent implements TextChangeListener, ValueChangeListener, ClickListener{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout pnlEntidadContenido;

	@AutoGenerated
	private VerticalLayout pnlParametroContenido;

	@AutoGenerated
	private HorizontalLayout pnlBotonContenido;

	@AutoGenerated
	private Button btnEliminarEntidad;

	@AutoGenerated
	private Button btnCrearEntidad;

	@AutoGenerated
	private TextField txtTelefonoEntidad;

	@AutoGenerated
	private TextArea txtADescripcionEntidad;

	@AutoGenerated
	private TextField txtDireccionEntidad;

	@AutoGenerated
	private ComboBox cmbDireccionEntidad;

	@AutoGenerated
	private TextField txtNombreEntidad;

	@AutoGenerated
	private ComboBox cmbEstadoEntidad;

	@AutoGenerated
	private ComboBox cmbTipoEntidad;

	@AutoGenerated
	private Label lblEntidad;

	@AutoGenerated
	private VerticalLayout pnlTablaContenido;

	@AutoGenerated
	private VerticalLayout pnlTablaEntidad;

	@AutoGenerated
	private Table tblEntidad;

	@AutoGenerated
	private HorizontalLayout pnlFiltroTablaEntidad;

	@AutoGenerated
	private TextField txtFiltroTelefono;

	@AutoGenerated
	private TextField txtFiltroDirtepol;

	@AutoGenerated
	private TextField txtFiltroDistrito;

	@AutoGenerated
	private TextField txtFiltroNombre;

	@AutoGenerated
	private TextField txtFiltroTipo;

	@AutoGenerated
	private Label lblFiltroEntidad;

	private static final long serialVersionUID = -397171381729562188L;
	
	protected static final Log logger = LogFactory.getLog(PanelMantenEntidad.class);
	
	private EntidadService entidadService;
	
	private ValorService valorService;
	
	private UbigeoService ubigeoService;
	
	private boolean flagNuevaEntidad;
	
	private Entidad entidad;
	
	private List<Distrito> lstDistritos; 
	private List<Valor> lstTipoEntidad;
	private List<Valor> lstEstados;
	
	public PanelMantenEntidad(List<Opcion> acciones, String height) {
		super(acciones,height);
		entidadService = Injector.obtenerServicio(EntidadService.class);
		valorService = Injector.obtenerServicio(ValorService.class);
		ubigeoService = Injector.obtenerServicio(UbigeoService.class);
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postConstruct();		
	}

	@Override
	public void postConstruct() {
		
		mainLayout.setStyleName("backColor");
		
		btnCrearEntidad.setIcon(Constante.ICONOS.SAVE);
		btnEliminarEntidad.setIcon(Constante.ICONOS.DELETE);
		
		habilitarEdicion(false);
		
		lstEstados = valorService.obtenerLista(Constante.LISTA.CODIGO.ESTADO);
		BeanItemContainer<Valor> bicEstados = new BeanItemContainer<Valor>(Valor.class,  lstEstados);
		cmbEstadoEntidad.setContainerDataSource(bicEstados);
		cmbEstadoEntidad.setItemCaptionPropertyId("nombre");
		cmbEstadoEntidad.setInputPrompt("Estado");
		
		lstTipoEntidad = valorService.obtenerLista(Constante.LISTA.CODIGO.ENTIDAD_TIPO);
		BeanItemContainer<Valor> bicTipos = new BeanItemContainer<Valor>(Valor.class,  lstTipoEntidad);
		cmbTipoEntidad.setImmediate(true);
		cmbTipoEntidad.setContainerDataSource(bicTipos);
		cmbTipoEntidad.setItemCaptionPropertyId("nombre");
		cmbTipoEntidad.setInputPrompt("Tipo");
		lstDistritos = ubigeoService.obtenerTodos();
		cmbDireccionEntidad.setContainerDataSource( new BeanItemContainer<Distrito>(Distrito.class, lstDistritos));
		cmbDireccionEntidad.setItemCaptionPropertyId("nombreCompleto");
		cmbDireccionEntidad.setFilteringMode(Filtering.FILTERINGMODE_CONTAINS);
		cmbDireccionEntidad.setInputPrompt("Distrito");
		//cmbDireccionEntidad.addListener((ValueChangeListener)this);
		
		txtFiltroTipo.setImmediate(true);
		txtFiltroNombre.setImmediate(true);
		txtFiltroDistrito.setImmediate(true);
		txtFiltroDirtepol.setImmediate(true);
		txtFiltroTelefono.setImmediate(true);
		
		txtFiltroTipo.addListener((TextChangeListener)this);
		txtFiltroNombre.addListener((TextChangeListener)this);
		txtFiltroDistrito.addListener((TextChangeListener)this);
		txtFiltroDirtepol.addListener((TextChangeListener)this);
		txtFiltroTelefono.addListener((TextChangeListener)this);
		
		tblEntidad.setSelectable(true);
		
		List<Entidad> entidades = entidadService.buscar(null);
		cargarEntidades(entidades, true);
		
		tblEntidad.setSelectable(true);
		tblEntidad.setImmediate(true);
		tblEntidad.setNullSelectionAllowed(true);
		tblEntidad.setNullSelectionItemId(null);
		
		tblEntidad.setSelectable(true);
		tblEntidad.setImmediate(true);
		tblEntidad.setNullSelectionAllowed(true);
		tblEntidad.setNullSelectionItemId(null);
		tblEntidad.setCacheRate(1);
		tblEntidad.addListener(new ValueChangeListener() {

			private static final long serialVersionUID = -6124596484581515359L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				boolean esModoNuevo = tblEntidad.getValue() == null;
				limpiar();
				habilitarEdicion(!esModoNuevo);
				if(esModoNuevo){
					tblEntidad.setValue(null);
				}else{
					Item item = tblEntidad.getItem(tblEntidad.getValue());
					entidad = new Entidad();
					entidad.setId(Long.valueOf(item.getItemProperty("id").getValue().toString()));
					txtNombreEntidad.setValue(item.getItemProperty("nombre").getValue());
					txtDireccionEntidad.setValue(item.getItemProperty("direccion").getValue());
					txtADescripcionEntidad.setValue(item.getItemProperty("descripcion").getValue());
					txtTelefonoEntidad.setValue(item.getItemProperty("telefono").getValue());
					if(!StringUtils.isEmpty(item.getItemProperty("tipoEntidad.id").getValue().toString())){
						Long valor = Long.valueOf(item.getItemProperty("tipoEntidad.id").getValue().toString());
						for(Valor tipo : lstTipoEntidad){
							if(tipo.getId().equals(valor)){
								cmbTipoEntidad.select(tipo);		
							}
						}	
					}
					if(!StringUtils.isEmpty(item.getItemProperty("estado.id").getValue().toString())){
						Long valor = Long.valueOf(item.getItemProperty("estado.id").getValue().toString());
						for(Valor tipo : lstEstados){
							if(tipo.getId().equals(valor)){
								cmbEstadoEntidad.select(tipo);		
							}
						}	
					}
					if(!StringUtils.isEmpty(item.getItemProperty("distrito.id").getValue().toString())){
						Long valor = Long.valueOf(item.getItemProperty("distrito.id").getValue().toString());
						for(Distrito dist : lstDistritos){
							if(dist.getId().equals(valor))
								cmbDireccionEntidad.select(dist);
						}
					}
				}
			}
		});
		btnCrearEntidad.addListener((ClickListener)this);
		btnEliminarEntidad.addListener((ClickListener)this);
	}
	
	private void cargarEntidades(List<Entidad> lstEntidades, boolean flagLimpiar){
		
		IndexedContainer container = new IndexedContainer();
		container.addContainerProperty("id", Long.class,  null);
		container.addContainerProperty("tipoEntidad.nombre", String.class, null);
		container.addContainerProperty("tipoEntidad.id", Long.class, null);
		container.addContainerProperty("estado.id", Long.class, null);
		container.addContainerProperty("nombre", String.class, null);
		container.addContainerProperty("descripcion", String.class, null);
		container.addContainerProperty("distrito.nombre", String.class, null);
		container.addContainerProperty("distrito.id", Long.class, null);
		container.addContainerProperty("direccion", String.class, null);
		container.addContainerProperty("telefono", String.class, null);
		container.addContainerProperty("dirtepol", BigDecimal.class, null);
		container.addContainerProperty("efectivos", BigDecimal.class, null);
		
		tblEntidad.setContainerDataSource(container);
		tblEntidad.setVisibleColumns(new Object[]{"tipoEntidad.nombre","nombre","distrito.nombre", "dirtepol", "telefono"});
	
		tblEntidad.setColumnWidth("tipoEntidad.id", 100);
		tblEntidad.setColumnWidth("tipoEntidad.nombre", 75);
		tblEntidad.setColumnWidth("nombre", 150);
		tblEntidad.setColumnWidth("distrito.nombre", 130);
		tblEntidad.setColumnWidth("dirtepol", 100);
		tblEntidad.setColumnWidth("telefono", 100);
		
		tblEntidad.setColumnHeader("tipoEntidad.id", "tipoid");
		tblEntidad.setColumnHeader("tipoEntidad.nombre", "tipo");
		tblEntidad.setColumnHeader("nombre", "nombre");
		tblEntidad.setColumnHeader("distrito.nombre", "Distrito");
		tblEntidad.setColumnHeader("dirtepol", "Dirtepol");
		tblEntidad.setColumnHeader("telefono", "Teléfono");
		
		int con=1;
		for (Entidad entidad: lstEntidades){
			Item item = container.addItem(con++);
			item.getItemProperty("id").setValue(entidad.getId());
			item.getItemProperty("tipoEntidad.id").setValue(entidad.getTipo()!=null?entidad.getTipo().getId():0l);
			item.getItemProperty("tipoEntidad.nombre").setValue(entidad.getTipo()!=null?entidad.getTipo().getNombre():StringUtils.EMPTY);
			item.getItemProperty("estado.id").setValue(entidad.getEstado()!=null?entidad.getEstado().getId():0l);
			item.getItemProperty("nombre").setValue(entidad.getNombre());
			item.getItemProperty("distrito.id").setValue(entidad.getDistrito()!=null?entidad.getDistrito().getId():0l);
			item.getItemProperty("distrito.nombre").setValue(entidad.getDistrito()!=null?entidad.getDistrito().getNombre():StringUtils.EMPTY);
			item.getItemProperty("dirtepol").setValue(entidad.getDirtepol());
			item.getItemProperty("telefono").setValue(entidad.getTelefono());
			item.getItemProperty("descripcion").setValue(entidad.getDescripcion());
			item.getItemProperty("direccion").setValue(entidad.getDireccion());
		}
		
		if(flagLimpiar){
			txtFiltroTipo.setValue("");
			txtFiltroNombre.setValue("");
			txtFiltroDistrito.setValue("");
			txtFiltroDirtepol.setValue("");
			txtFiltroTelefono.setValue("");
		}
	
	}
	
	@Override
	public void textChange(TextChangeEvent event) { 
		Entidad entidad = new Entidad();
		
		if(event.getSource().equals(txtFiltroTipo)){
			
			if(StringUtils.isNotBlank(event.getText())){
				Valor tipo = new Valor();
				tipo.setNombre(event.getText());
				entidad.setTipo(tipo);
			}
			
			if(StringUtils.isNotBlank(txtFiltroNombre.getValue().toString())){
				entidad.setNombre(txtFiltroNombre.getValue().toString());
			}
			
			if(event.getSource().equals(txtFiltroDistrito)){
				Distrito distrito = new Distrito();
				distrito.setNombre(txtFiltroDistrito.getValue().toString());	
				entidad.setDistrito(distrito);
			}
			
			if(StringUtils.isNotBlank(txtFiltroTelefono.getValue().toString())){
				entidad.setNombre(txtFiltroTelefono.getValue().toString());
			}
		}
		
		if(event.getSource().equals(txtFiltroNombre)){
			
			if(StringUtils.isNotBlank(txtFiltroTipo.getValue().toString())){
				Valor tipo = new Valor();
				tipo.setNombre(txtFiltroTipo.getValue().toString());
				entidad.setTipo(tipo);
			}
			
			if(StringUtils.isNotBlank(event.getText())){
				entidad.setNombre(event.getText());
			}
			
			if(StringUtils.isNotBlank(txtFiltroDistrito.getValue().toString())){
				Distrito distrito = new Distrito();
				distrito.setNombre(txtFiltroDistrito.getValue().toString());	
				entidad.setDistrito(distrito);
			}
			
			if(StringUtils.isNotBlank(txtFiltroTelefono.getValue().toString())){
				entidad.setNombre(txtFiltroTelefono.getValue().toString());
			}
		}
		
		if(event.getSource().equals(txtFiltroDistrito)){
			
			if(StringUtils.isNotBlank(txtFiltroTipo.getValue().toString())){
				Valor tipo = new Valor();
				tipo.setNombre(txtFiltroTipo.getValue().toString());
				entidad.setTipo(tipo);
			}
			
			if(StringUtils.isNotBlank(txtFiltroNombre.getValue().toString())){
				entidad.setNombre(txtFiltroNombre.getValue().toString());
			}
			
			if(StringUtils.isNotBlank(event.getText())){
				Distrito distrito = new Distrito();
				distrito.setNombre(event.getText());	
				entidad.setDistrito(distrito);
			}
			
			if(StringUtils.isNotBlank(txtFiltroTelefono.getValue().toString())){
				entidad.setNombre(txtFiltroTelefono.getValue().toString());
			}
		}
		
		if(event.getSource().equals(txtFiltroTelefono)){
			
			if(StringUtils.isNotBlank(txtFiltroTipo.getValue().toString())){
				Valor tipo = new Valor();
				tipo.setNombre(txtFiltroTipo.getValue().toString());
				entidad.setTipo(tipo);
			}
			
			if(StringUtils.isNotBlank(txtFiltroNombre.getValue().toString())){
				entidad.setNombre(txtFiltroNombre.getValue().toString());
			}
			
			if(StringUtils.isNotBlank(txtFiltroDistrito.getValue().toString())){
				Distrito distrito = new Distrito();
				distrito.setNombre(txtFiltroDistrito.getValue().toString());	
				entidad.setDistrito(distrito);
			}
			
			if(StringUtils.isNotBlank(event.getText())){
				entidad.setTelefono(event.getText());
			}
		}

		List<Entidad> entidades = entidadService.buscar(entidad);	
		cargarEntidades(entidades, false);
	}

	private void habilitarEdicion(boolean flag){
		flagNuevaEntidad = !flag;
		btnEliminarEntidad.setVisible(flag);
		if(flag){
			btnCrearEntidad.setCaption("Actualizar");
		}
		else{
			btnCrearEntidad.setCaption("Crear");
		}
	}
	
	@Override
	public void buttonClick(ClickEvent event) {
		if(event.getButton().equals(btnCrearEntidad)){
			entidad.setNombre(txtNombreEntidad.getValue().toString());
			entidad.setDescripcion(txtADescripcionEntidad.getValue().toString());
			entidad.setEstado((Valor)cmbEstadoEntidad.getValue());
			entidad.setTipo((Valor)cmbTipoEntidad.getValue());
			entidad.setDireccion(txtDireccionEntidad.getValue().toString());
			entidad.setDistrito((Distrito) cmbDireccionEntidad.getValue());
			entidad.setTelefono(txtTelefonoEntidad.getValue().toString());
			entidad.validar();
			if(flagNuevaEntidad){
				entidadService.crear(entidad);
			}else{
				entidadService.actualizar(entidad);
			}
			refrescar();
		}
		if(event.getButton().equals(btnEliminarEntidad)){
			entidadService.eliminarXId(entidad.getId());
			refrescar();
		}
	}
	
	private void refrescar(){
		habilitarEdicion(false);
		limpiar();
		List<Entidad> lstEntidades = entidadService.buscar(null);
		cargarEntidades(lstEntidades, true);
	}
	
	private void limpiar(){
		///lblIdEntidad.setValue("");
		entidad= new Entidad();
		cmbTipoEntidad.select(null);
		txtNombreEntidad.setValue("");
		txtADescripcionEntidad.setValue("");
		txtDireccionEntidad.setValue("");
		txtTelefonoEntidad.setValue("");
		cmbEstadoEntidad.select(null);
		cmbDireccionEntidad.select(null);
		
	}
	
	@Override
	public void valueChange(ValueChangeEvent event) {
		
		if(event.getProperty().equals(cmbDireccionEntidad)){
			
		}
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// pnlEntidadContenido
		pnlEntidadContenido = buildPnlEntidadContenido();
		mainLayout.addComponent(pnlEntidadContenido);
		mainLayout
				.setComponentAlignment(pnlEntidadContenido, new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildPnlEntidadContenido() {
		// common part: create layout
		pnlEntidadContenido = new HorizontalLayout();
		pnlEntidadContenido.setStyleName("whiteBackGround");
		pnlEntidadContenido.setImmediate(false);
		pnlEntidadContenido.setWidth("-1px");
		pnlEntidadContenido.setHeight("-1px");
		pnlEntidadContenido.setMargin(true);
		pnlEntidadContenido.setSpacing(true);
		
		// pnlTablaContenido
		pnlTablaContenido = buildPnlTablaContenido();
		pnlEntidadContenido.addComponent(pnlTablaContenido);
		
		// pnlParametroContenido
		pnlParametroContenido = buildPnlParametroContenido();
		pnlEntidadContenido.addComponent(pnlParametroContenido);
		
		return pnlEntidadContenido;
	}

	@AutoGenerated
	private VerticalLayout buildPnlTablaContenido() {
		// common part: create layout
		pnlTablaContenido = new VerticalLayout();
		pnlTablaContenido.setImmediate(false);
		pnlTablaContenido.setWidth("-1px");
		pnlTablaContenido.setHeight("-1px");
		pnlTablaContenido.setMargin(false);
		
		// lblFiltroEntidad
		lblFiltroEntidad = new Label();
		lblFiltroEntidad.setStyleName("h2");
		lblFiltroEntidad.setImmediate(false);
		lblFiltroEntidad.setWidth("650px");
		lblFiltroEntidad.setHeight("-1px");
		lblFiltroEntidad.setValue("Filtro de Entidades");
		pnlTablaContenido.addComponent(lblFiltroEntidad);
		
		// pnlFiltroTablaEntidad
		pnlFiltroTablaEntidad = buildPnlFiltroTablaEntidad();
		pnlTablaContenido.addComponent(pnlFiltroTablaEntidad);
		
		// pnlTablaEntidad
		pnlTablaEntidad = buildPnlTablaEntidad();
		pnlTablaContenido.addComponent(pnlTablaEntidad);
		
		return pnlTablaContenido;
	}

	@AutoGenerated
	private HorizontalLayout buildPnlFiltroTablaEntidad() {
		// common part: create layout
		pnlFiltroTablaEntidad = new HorizontalLayout();
		pnlFiltroTablaEntidad.setImmediate(false);
		pnlFiltroTablaEntidad.setWidth("-1px");
		pnlFiltroTablaEntidad.setHeight("-1px");
		pnlFiltroTablaEntidad.setMargin(false);
		
		// txtFiltroTipo
		txtFiltroTipo = new TextField();
		txtFiltroTipo.setImmediate(false);
		txtFiltroTipo.setWidth("85px");
		txtFiltroTipo.setHeight("-1px");
		txtFiltroTipo.setInputPrompt("Tipo");
		pnlFiltroTablaEntidad.addComponent(txtFiltroTipo);
		
		// txtFiltroNombre
		txtFiltroNombre = new TextField();
		txtFiltroNombre.setImmediate(false);
		txtFiltroNombre.setWidth("165px");
		txtFiltroNombre.setHeight("-1px");
		txtFiltroNombre.setInputPrompt("Nombre de Procedencia");
		pnlFiltroTablaEntidad.addComponent(txtFiltroNombre);
		
		// txtFiltroDistrito
		txtFiltroDistrito = new TextField();
		txtFiltroDistrito.setImmediate(false);
		txtFiltroDistrito.setWidth("145px");
		txtFiltroDistrito.setHeight("-1px");
		txtFiltroDistrito.setInputPrompt("Distrito");
		pnlFiltroTablaEntidad.addComponent(txtFiltroDistrito);
		
		// txtFiltroDirtepol
		txtFiltroDirtepol = new TextField();
		txtFiltroDirtepol.setImmediate(false);
		txtFiltroDirtepol.setWidth("115px");
		txtFiltroDirtepol.setHeight("-1px");
		txtFiltroDirtepol.setInputPrompt("Dirtepol");
		pnlFiltroTablaEntidad.addComponent(txtFiltroDirtepol);
		
		// txtFiltroTelefono
		txtFiltroTelefono = new TextField();
		txtFiltroTelefono.setImmediate(false);
		txtFiltroTelefono.setWidth("117px");
		txtFiltroTelefono.setHeight("-1px");
		txtFiltroTelefono.setInputPrompt("Teléfono");
		pnlFiltroTablaEntidad.addComponent(txtFiltroTelefono);
		
		return pnlFiltroTablaEntidad;
	}

	@AutoGenerated
	private VerticalLayout buildPnlTablaEntidad() {
		// common part: create layout
		pnlTablaEntidad = new VerticalLayout();
		pnlTablaEntidad.setImmediate(false);
		pnlTablaEntidad.setWidth("-1px");
		pnlTablaEntidad.setHeight("410px");
		pnlTablaEntidad.setMargin(false);
		
		// tblEntidad
		tblEntidad = new Table();
		tblEntidad.setImmediate(false);
		tblEntidad.setWidth("640px");
		tblEntidad.setHeight("370px");
		pnlTablaEntidad.addComponent(tblEntidad);
		
		return pnlTablaEntidad;
	}

	@AutoGenerated
	private VerticalLayout buildPnlParametroContenido() {
		// common part: create layout
		pnlParametroContenido = new VerticalLayout();
		pnlParametroContenido.setImmediate(false);
		pnlParametroContenido.setWidth("250px");
		pnlParametroContenido.setHeight("-1px");
		pnlParametroContenido.setMargin(false);
		pnlParametroContenido.setSpacing(true);
		
		// lblEntidad
		lblEntidad = new Label();
		lblEntidad.setStyleName("h2");
		lblEntidad.setImmediate(false);
		lblEntidad.setWidth("-1px");
		lblEntidad.setHeight("-1px");
		lblEntidad.setValue("Administración de Entidad");
		pnlParametroContenido.addComponent(lblEntidad);
		
		// cmbTipoEntidad
		cmbTipoEntidad = new ComboBox();
		cmbTipoEntidad.setCaption("Tipo de Entidad");
		cmbTipoEntidad.setImmediate(false);
		cmbTipoEntidad.setWidth("-1px");
		cmbTipoEntidad.setHeight("-1px");
		cmbTipoEntidad.setRequired(true);
		pnlParametroContenido.addComponent(cmbTipoEntidad);
		
		// cmbEstadoEntidad
		cmbEstadoEntidad = new ComboBox();
		cmbEstadoEntidad.setCaption("Estado");
		cmbEstadoEntidad.setImmediate(false);
		cmbEstadoEntidad.setWidth("180px");
		cmbEstadoEntidad.setHeight("-1px");
		cmbEstadoEntidad.setRequired(true);
		pnlParametroContenido.addComponent(cmbEstadoEntidad);
		
		// txtNombreEntidad
		txtNombreEntidad = new TextField();
		txtNombreEntidad.setCaption("Nombre");
		txtNombreEntidad.setImmediate(false);
		txtNombreEntidad.setWidth("230px");
		txtNombreEntidad.setHeight("-1px");
		txtNombreEntidad.setRequired(true);
		txtNombreEntidad.setInputPrompt("Nombre");
		pnlParametroContenido.addComponent(txtNombreEntidad);
		
		// cmbDireccionEntidad
		cmbDireccionEntidad = new ComboBox();
		cmbDireccionEntidad.setCaption("Distrito");
		cmbDireccionEntidad.setImmediate(false);
		cmbDireccionEntidad.setWidth("230px");
		cmbDireccionEntidad.setHeight("-1px");
		pnlParametroContenido.addComponent(cmbDireccionEntidad);
		
		// txtDireccionEntidad
		txtDireccionEntidad = new TextField();
		txtDireccionEntidad.setCaption("Dirección");
		txtDireccionEntidad.setImmediate(false);
		txtDireccionEntidad.setWidth("230px");
		txtDireccionEntidad.setHeight("-1px");
		txtDireccionEntidad.setInputPrompt("Dirección");
		pnlParametroContenido.addComponent(txtDireccionEntidad);
		
		// txtADescripcionEntidad
		txtADescripcionEntidad = new TextArea();
		txtADescripcionEntidad.setCaption("Descripción");
		txtADescripcionEntidad.setImmediate(false);
		txtADescripcionEntidad.setWidth("210px");
		txtADescripcionEntidad.setHeight("-1px");
		txtADescripcionEntidad.setInputPrompt("Descripción");
		pnlParametroContenido.addComponent(txtADescripcionEntidad);
		
		// txtTelefonoEntidad
		txtTelefonoEntidad = new TextField();
		txtTelefonoEntidad.setCaption("Teléfono");
		txtTelefonoEntidad.setImmediate(false);
		txtTelefonoEntidad.setWidth("210px");
		txtTelefonoEntidad.setHeight("-1px");
		txtTelefonoEntidad.setInputPrompt("Teléfono");
		pnlParametroContenido.addComponent(txtTelefonoEntidad);
		
		// pnlBotonContenido
		pnlBotonContenido = buildPnlBotonContenido();
		pnlParametroContenido.addComponent(pnlBotonContenido);
		
		return pnlParametroContenido;
	}

	@AutoGenerated
	private HorizontalLayout buildPnlBotonContenido() {
		// common part: create layout
		pnlBotonContenido = new HorizontalLayout();
		pnlBotonContenido.setImmediate(false);
		pnlBotonContenido.setWidth("220px");
		pnlBotonContenido.setHeight("-1px");
		pnlBotonContenido.setMargin(false);
		pnlBotonContenido.setSpacing(true);
		
		// btnCrearEntidad
		btnCrearEntidad = new Button();
		btnCrearEntidad.setCaption("Crear");
		btnCrearEntidad.setImmediate(true);
		btnCrearEntidad.setWidth("-1px");
		btnCrearEntidad.setHeight("-1px");
		pnlBotonContenido.addComponent(btnCrearEntidad);
		pnlBotonContenido.setComponentAlignment(btnCrearEntidad, new Alignment(
				20));
		
		// btnEliminarEntidad
		btnEliminarEntidad = new Button();
		btnEliminarEntidad.setCaption("Eliminar");
		btnEliminarEntidad.setImmediate(true);
		btnEliminarEntidad.setWidth("-1px");
		btnEliminarEntidad.setHeight("-1px");
		pnlBotonContenido.addComponent(btnEliminarEntidad);
		pnlBotonContenido.setComponentAlignment(btnEliminarEntidad,
				new Alignment(20));
		
		return pnlBotonContenido;
	}

}
