package pe.gob.mininter.dirandro.vaadin.panel.mantenimiento;

import java.util.List;

import org.apache.commons.lang.StringUtils;

import pe.gob.mininter.dirandro.model.Letrado;
import pe.gob.mininter.dirandro.model.Opcion;
import pe.gob.mininter.dirandro.model.Persona;
import pe.gob.mininter.dirandro.model.Valor;
import pe.gob.mininter.dirandro.service.LetradoService;
import pe.gob.mininter.dirandro.service.PersonaService;
import pe.gob.mininter.dirandro.service.ValorService;
import pe.gob.mininter.dirandro.util.Constante;
import pe.gob.mininter.dirandro.vaadin.panel.util.PanelAgregarPersona;
import pe.gob.mininter.dirandro.vaadin.util.DirandroComponent;
import pe.gob.mininter.dirandro.vaadin.util.Injector;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

public class PanelMantenLetrado extends DirandroComponent implements TextChangeListener,ClickListener {
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout pnlPrincipal;
	@AutoGenerated
	private VerticalLayout pnlDatos;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private Button btnEliminar;
	@AutoGenerated
	private Button btnAgregar;
	@AutoGenerated
	private TextField txtColegiatura;
	@AutoGenerated
	private ComboBox cmbTipo;
	@AutoGenerated
	private HorizontalLayout pnlDatos3;
	@AutoGenerated
	private Label lblNacionalidad;
	@AutoGenerated
	private Label lblSexo;
	@AutoGenerated
	private HorizontalLayout pnlDatos2;
	@AutoGenerated
	private Label lblNumeroDoc;
	@AutoGenerated
	private Label lblTipoDocumento;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_4;
	@AutoGenerated
	private Button btnNuevo;
	@AutoGenerated
	private ComboBox cmbNombres;
	@AutoGenerated
	private Label lblLetrado;
	@AutoGenerated
	private VerticalLayout pnlLista;
	@AutoGenerated
	private Table tblLetrados;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private TextField txtfiltroNroDniLetrado;
	@AutoGenerated
	private TextField txtfiltroApellidoLetrado;
	@AutoGenerated
	private TextField txtfiltroNomLetrado;
	@AutoGenerated
	private Label lblFiltro;
	private static final long serialVersionUID = -2300724647915630886L;
	
	private List<Valor> lstTipoLetrado;
	private List<Persona> lstPersonas;
	
	private PanelAgregarPersona pnlAgregarPersona;
	private ValorService valorService;
	private LetradoService letradoService;	
	private PersonaService personaService;
	private boolean flagNuevaEstado;
	private Long idLetrado;
	private Persona personaPopUp;
		
	public Persona getPersonaPopUp() {
		return personaPopUp;
	}

	public void setPersonaPopUp(Persona personaPopUp) {
		this.personaPopUp = personaPopUp;
	}
	
	public PanelMantenLetrado(List<Opcion> acciones, String height) {
		super(acciones, height);
		buildMainLayout();
		setCompositionRoot(mainLayout);
		valorService = Injector.obtenerServicio(ValorService.class);
		letradoService = Injector.obtenerServicio(LetradoService.class);		
		personaService = Injector.obtenerServicio(PersonaService.class);
		postConstruct();
	}
	
	public void postConstruct() {
		
		btnNuevo.addListener((ClickListener)this);
		btnAgregar.addListener((ClickListener)this);
		btnNuevo.setIcon(Constante.ICONOS.CREATE);
		
		pnlDatos2.setEnabled(false);
		pnlDatos2.setVisible(false);
		pnlDatos3.setVisible(false);
		pnlDatos3.setEnabled(false);
		
		cargaLista();
		habilitarEdicion(false);
		
		txtfiltroNomLetrado.addListener((TextChangeListener)this);
		txtfiltroApellidoLetrado.addListener((TextChangeListener)this);
		txtfiltroNroDniLetrado.addListener((TextChangeListener)this);
		
		tblLetrados.setSelectable(true);
		tblLetrados.setImmediate(true);
		tblLetrados.setNullSelectionAllowed(true);
		tblLetrados.setNullSelectionItemId(null);
		tblLetrados.addListener(new ValueChangeListener() {
			
			private static final long serialVersionUID = 7962790507398071986L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				boolean esModoNuevo = tblLetrados.getValue() == null;
				limpiar();
				if(esModoNuevo){
					tblLetrados.setValue(null);
					habilitarEdicion(false);
					pnlDatos2.setVisible(false);
					pnlDatos3.setVisible(false);
				}
				else{
					pnlDatos2.setVisible(true);
					pnlDatos3.setVisible(true);
					habilitarEdicion(true);
					Item item = tblLetrados.getItem(tblLetrados.getValue());
					idLetrado = (Long) item.getItemProperty("id").getValue();
					txtColegiatura.setValue(item.getItemProperty("nroColegiatura").getValue());

					for (Valor tipoLetrado : lstTipoLetrado) {
						if (tipoLetrado.getId().equals((Long) item.getItemProperty("tipo.id").getValue())) {
							cmbTipo.select(tipoLetrado);
							break;
						}
					}
					
					for (Persona letrado : lstPersonas) {
						if (letrado.getId().equals((Long) item.getItemProperty("persona.id").getValue())) {
							cmbNombres.select(letrado);
							break;
						}
					}															
				}
			}
		});	
		refrescar();
	}
	
	public void refrescar(){
		habilitarEdicion(false);
		limpiar();
		cargarLetrados(letradoService.listarLetrado());
	}
	
	public void cargaLista(){
		lstTipoLetrado = valorService.obtenerLista(Constante.LISTA.CODIGO.TIPO_LETRADO);
		cmbTipo.setContainerDataSource(new BeanItemContainer<Valor>(Valor.class,  lstTipoLetrado));
		cmbTipo.setInputPrompt("tipoLetrado");
		cmbTipo.setItemCaptionPropertyId("nombre");
		
		lstPersonas = personaService.buscar(null);
		cmbNombres.setInputPrompt("Persona");
		cmbNombres.setItemCaptionPropertyId("nombreCompleto");
		cmbNombres.setImmediate(true);
		cmbNombres.setContainerDataSource(new BeanItemContainer<Persona>(Persona.class, lstPersonas));
		
		cmbNombres.addListener( new ValueChangeListener() {
			
			private static final long serialVersionUID = -6213576334461528840L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				cambiaPersona(event);
			}

			private void cambiaPersona(ValueChangeEvent event) {
				
				pnlDatos2.setVisible(true);
				pnlDatos3.setVisible(true);
				
				if( cmbNombres.getValue() != null) {
					Persona perSel = (Persona)cmbNombres.getValue();
					lblTipoDocumento.setValue("Tipo Doc.: "+perSel.getTipoDocumento() != null ? perSel.getTipoDocumento().getNombre() : StringUtils.EMPTY);
					lblNumeroDoc.setValue("Nro. Doc.: "+perSel.getNroDocumento());
					lblSexo.setValue(perSel.getSexo().equalsIgnoreCase("F") ? "Sexo: Femenino" : "Sexo: Masculino");
					lblNacionalidad.setValue(perSel.getNacionalidad() != null ? "Nacionalidad: "+perSel.getNacionalidad().getNombre() : StringUtils.EMPTY);
				}
			}			
		});
	}
	
	private void habilitarEdicion(boolean flag){
		flagNuevaEstado = flag;
		if(flag){
			btnAgregar.setCaption("Actualizar");
		}
		else{
			btnAgregar.setCaption("Crear");
		}
	}
	
	private void cargarLetrados(List<Letrado> listLetrado){
		IndexedContainer container = new IndexedContainer();
		container.addContainerProperty("id", Long.class,  null);
		container.addContainerProperty("nombres", String.class, null);
		container.addContainerProperty("ape_paterno", String.class, null);
		container.addContainerProperty("nro_documento", String.class, null);
		container.addContainerProperty("nroColegiatura", String.class, null);
		container.addContainerProperty("tipo", Valor.class, null);
		container.addContainerProperty("tipo.id", Long.class, null);
		container.addContainerProperty("persona", Persona.class, null);
		container.addContainerProperty("persona.id", Long.class, null);
		container.addContainerProperty("persona.tipoDocumento", String.class, null);
		container.addContainerProperty("persona.nroDocumento", String.class, null);
		container.addContainerProperty("persona.sexo", String.class, null);
		container.addContainerProperty("persona.nacionalidad", String.class, null);
		
		tblLetrados.setContainerDataSource(container);
		tblLetrados.setVisibleColumns(new Object[]{"nombres", "ape_paterno", "nro_documento"});
	
		tblLetrados.setColumnWidth("nombres", 110);
		tblLetrados.setColumnWidth("ape_paterno", 120);
		tblLetrados.setColumnWidth("nro_documento", 90);
				
		tblLetrados.setColumnHeader("nombres", "Nombre");
		tblLetrados.setColumnHeader("ape_paterno", "Paterno");
		tblLetrados.setColumnHeader("nro_documento", "Nro Documento");
		
		int con=1;
		for (Letrado letrado : listLetrado){
			Item item = container.addItem(con++);
			item.getItemProperty("id").setValue(letrado.getId());
			item.getItemProperty("persona").setValue(letrado.getPersona());
			item.getItemProperty("persona.id").setValue(letrado.getPersona().getId());
			item.getItemProperty("nombres").setValue(letrado.getPersona().getNombres());
			item.getItemProperty("ape_paterno").setValue(letrado.getPersona().getApePaterno());
			item.getItemProperty("nro_documento").setValue(letrado.getPersona().getNroDocumento());
			item.getItemProperty("persona.tipoDocumento").setValue(letrado.getPersona().getTipoDocumento() != null ? letrado.getPersona().getTipoDocumento().getNombre() : StringUtils.EMPTY);
			item.getItemProperty("persona.nroDocumento").setValue(letrado.getPersona().getNroDocumento() != null ? letrado.getPersona().getNroDocumento().toString() : StringUtils.EMPTY);
			item.getItemProperty("persona.sexo").setValue(letrado.getPersona().getSexo() != null ? letrado.getPersona().getSexo().toString() : StringUtils.EMPTY);
			item.getItemProperty("persona.nacionalidad").setValue(letrado.getPersona().getNacionalidad() != null ? letrado.getPersona().getNacionalidad().getNombre() : StringUtils.EMPTY);
			item.getItemProperty("nroColegiatura").setValue(letrado.getNroColegiatura());
			item.getItemProperty("tipo").setValue(letrado.getTipo());
			item.getItemProperty("tipo.id").setValue(letrado.getTipo().getId());
		}
	}
	
	 public void obtenerDatosPersona() {
		 lstPersonas = personaService.buscar(null);
         cmbNombres.setContainerDataSource(new BeanItemContainer<Persona>(Persona.class, lstPersonas));
         lblTipoDocumento.setValue("Tipo Doc. : "+personaPopUp.getTipoDocumento().getNombre());
         lblNumeroDoc.setValue("Nro. Doc. :"+personaPopUp.getNroDocumento());
         lblSexo.setValue((personaPopUp.getSexo().equalsIgnoreCase("F")) ? "Sexo: Femenino" : "Sexo: Masculino");
         lblNacionalidad.setValue(personaPopUp.getNacionalidad() != null ? ""+personaPopUp.getNacionalidad().getNombre() : StringUtils.EMPTY);
         
         for (Persona persona : lstPersonas) {
             if (persona.getId().equals(personaPopUp.getId())){
                 cmbNombres.select(persona);
                 break;
             }
         }
 }
		
	private void cargarWindowPersona(Persona persona) {
				//new PanelAgregarPersona(pnlMantenLetrado, persona)
		pnlAgregarPersona = new PanelAgregarPersona(this, persona);
		pnlAgregarPersona.setParent(this.getParent());
		
		final Window window=new Window(){
			
			private static final long serialVersionUID = 1L;

			protected void close() {
		    	getApplication().getMainWindow().removeWindow(getWindow());
			}
		};
		      
		window.setCaption("Registrar Persona");
		window.addComponent(pnlAgregarPersona);
		window.setModal(true);
		window.setResizable(false);
		window.setWidth("650px");
		window.setHeight("-1.0");
		getApplication().getMainWindow().addWindow(window);
		
	}
		
	@Override
	public void buttonClick(ClickEvent event) {
		
		if (event.getButton().equals(btnNuevo)) {
			cargarWindowPersona(new Persona());
		}else if (event.getButton().equals(btnAgregar)) {	
			Letrado letrado =  new Letrado();
			letrado.setPersona((Persona) cmbNombres.getValue());
			letrado.setTipo((Valor) cmbTipo.getValue());
			letrado.setNroColegiatura(txtColegiatura.getValue().toString());
			if(flagNuevaEstado){
				letrado.setId(idLetrado);
				letradoService.actualizar(letrado);
			}
			else{
				letradoService.crear(letrado);
			}
			refrescar();
		}
	}
	
	private void limpiar(){
		cmbNombres.select(null);
		lblTipoDocumento.setValue("");
		lblNumeroDoc.setValue("");
		lblSexo.setValue("");
		lblNacionalidad.setValue("");
		cmbTipo.select(null);
		txtColegiatura.setValue("");
		idLetrado = null;
	}	
	
	@Override
	public void textChange(TextChangeEvent event) {
		Letrado letrado = new Letrado();
		letrado.setPersona(new Persona());		
		
		if (event.getSource().equals(txtfiltroNomLetrado)) {
			letrado.getPersona().setNombres(event.getText());
							
		}
		else if (event.getSource().equals(txtfiltroApellidoLetrado)) {		
			letrado.getPersona().setApePaterno(event.getText());					
		}
		else if (event.getSource().equals(txtfiltroNroDniLetrado)) {		
			letrado.getPersona().setNroDocumento(event.getText());					
		}
		//List<Letrado> lista = letradoService.buscar(letrado);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// pnlPrincipal
		pnlPrincipal = buildPnlPrincipal();
		mainLayout.addComponent(pnlPrincipal);
		mainLayout.setComponentAlignment(pnlPrincipal, new Alignment(20));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildPnlPrincipal() {
		// common part: create layout
		pnlPrincipal = new HorizontalLayout();
		pnlPrincipal.setStyleName("whiteBackGround");
		pnlPrincipal.setImmediate(false);
		pnlPrincipal.setWidth("-1px");
		pnlPrincipal.setHeight("-1px");
		pnlPrincipal.setMargin(true);
		pnlPrincipal.setSpacing(true);
		
		// pnlLista
		pnlLista = buildPnlLista();
		pnlPrincipal.addComponent(pnlLista);
		
		// pnlDatos
		pnlDatos = buildPnlDatos();
		pnlPrincipal.addComponent(pnlDatos);
		pnlPrincipal.setComponentAlignment(pnlDatos, new Alignment(20));
		
		return pnlPrincipal;
	}

	@AutoGenerated
	private VerticalLayout buildPnlLista() {
		// common part: create layout
		pnlLista = new VerticalLayout();
		pnlLista.setImmediate(false);
		pnlLista.setWidth("460px");
		pnlLista.setHeight("-1px");
		pnlLista.setMargin(false);
		
		// lblFiltro
		lblFiltro = new Label();
		lblFiltro.setStyleName("h2");
		lblFiltro.setImmediate(false);
		lblFiltro.setWidth("157px");
		lblFiltro.setHeight("-1px");
		lblFiltro.setValue("Filtro de Letrados");
		pnlLista.addComponent(lblFiltro);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		pnlLista.addComponent(horizontalLayout_1);
		
		// tblLetrados
		tblLetrados = new Table();
		tblLetrados.setImmediate(false);
		tblLetrados.setWidth("450px");
		tblLetrados.setHeight("300px");
		pnlLista.addComponent(tblLetrados);
		
		return pnlLista;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		
		// txtfiltroNomLetrado
		txtfiltroNomLetrado = new TextField();
		txtfiltroNomLetrado.setImmediate(false);
		txtfiltroNomLetrado.setWidth("120px");
		txtfiltroNomLetrado.setHeight("-1px");
		txtfiltroNomLetrado.setInputPrompt("Nombre");
		horizontalLayout_1.addComponent(txtfiltroNomLetrado);
		
		// txtfiltroApellidoLetrado
		txtfiltroApellidoLetrado = new TextField();
		txtfiltroApellidoLetrado.setImmediate(false);
		txtfiltroApellidoLetrado.setWidth("140px");
		txtfiltroApellidoLetrado.setHeight("-1px");
		txtfiltroApellidoLetrado.setInputPrompt("Apellido");
		horizontalLayout_1.addComponent(txtfiltroApellidoLetrado);
		
		// txtfiltroNroDniLetrado
		txtfiltroNroDniLetrado = new TextField();
		txtfiltroNroDniLetrado.setImmediate(false);
		txtfiltroNroDniLetrado.setWidth("100px");
		txtfiltroNroDniLetrado.setHeight("-1px");
		txtfiltroNroDniLetrado.setInputPrompt("Num Tipo Doc");
		horizontalLayout_1.addComponent(txtfiltroNroDniLetrado);
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private VerticalLayout buildPnlDatos() {
		// common part: create layout
		pnlDatos = new VerticalLayout();
		pnlDatos.setStyleName("h2");
		pnlDatos.setImmediate(false);
		pnlDatos.setWidth("-1px");
		pnlDatos.setHeight("-1px");
		pnlDatos.setMargin(false);
		pnlDatos.setSpacing(true);
		
		// lblLetrado
		lblLetrado = new Label();
		lblLetrado.setStyleName("h2");
		lblLetrado.setImmediate(false);
		lblLetrado.setWidth("187px");
		lblLetrado.setHeight("-1px");
		lblLetrado.setValue("Administración Letrado");
		pnlDatos.addComponent(lblLetrado);
		
		// horizontalLayout_4
		horizontalLayout_4 = buildHorizontalLayout_4();
		pnlDatos.addComponent(horizontalLayout_4);
		
		// pnlDatos2
		pnlDatos2 = buildPnlDatos2();
		pnlDatos.addComponent(pnlDatos2);
		
		// pnlDatos3
		pnlDatos3 = buildPnlDatos3();
		pnlDatos.addComponent(pnlDatos3);
		
		// cmbTipo
		cmbTipo = new ComboBox();
		cmbTipo.setCaption("Tipo de Letrado");
		cmbTipo.setImmediate(false);
		cmbTipo.setWidth("200px");
		cmbTipo.setHeight("-1px");
		cmbTipo.setRequired(true);
		pnlDatos.addComponent(cmbTipo);
		
		// txtColegiatura
		txtColegiatura = new TextField();
		txtColegiatura.setCaption("N° de Colegiatura");
		txtColegiatura.setImmediate(false);
		txtColegiatura.setWidth("150px");
		txtColegiatura.setHeight("-1px");
		pnlDatos.addComponent(txtColegiatura);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		pnlDatos.addComponent(horizontalLayout_2);
		
		return pnlDatos;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_4() {
		// common part: create layout
		horizontalLayout_4 = new HorizontalLayout();
		horizontalLayout_4.setImmediate(false);
		horizontalLayout_4.setWidth("-1px");
		horizontalLayout_4.setHeight("-1px");
		horizontalLayout_4.setMargin(false);
		horizontalLayout_4.setSpacing(true);
		
		// cmbNombres
		cmbNombres = new ComboBox();
		cmbNombres.setCaption("Nombre Apellido Letrado");
		cmbNombres.setImmediate(false);
		cmbNombres.setWidth("230px");
		cmbNombres.setHeight("-1px");
		cmbNombres.setRequired(true);
		horizontalLayout_4.addComponent(cmbNombres);
		
		// btnNuevo
		btnNuevo = new Button();
		btnNuevo.setCaption(" ");
		btnNuevo.setImmediate(true);
		btnNuevo.setWidth("-1px");
		btnNuevo.setHeight("-1px");
		horizontalLayout_4.addComponent(btnNuevo);
		horizontalLayout_4.setComponentAlignment(btnNuevo, new Alignment(24));
		
		return horizontalLayout_4;
	}

	@AutoGenerated
	private HorizontalLayout buildPnlDatos2() {
		// common part: create layout
		pnlDatos2 = new HorizontalLayout();
		pnlDatos2.setImmediate(false);
		pnlDatos2.setWidth("-1px");
		pnlDatos2.setHeight("-1px");
		pnlDatos2.setMargin(false);
		pnlDatos2.setSpacing(true);
		
		// lblTipoDocumento
		lblTipoDocumento = new Label();
		lblTipoDocumento.setImmediate(false);
		lblTipoDocumento.setWidth("-1px");
		lblTipoDocumento.setHeight("-1px");
		lblTipoDocumento.setValue(" ");
		pnlDatos2.addComponent(lblTipoDocumento);
		
		// lblNumeroDoc
		lblNumeroDoc = new Label();
		lblNumeroDoc.setImmediate(false);
		lblNumeroDoc.setWidth("-1px");
		lblNumeroDoc.setHeight("-1px");
		lblNumeroDoc.setValue(" ");
		pnlDatos2.addComponent(lblNumeroDoc);
		
		return pnlDatos2;
	}

	@AutoGenerated
	private HorizontalLayout buildPnlDatos3() {
		// common part: create layout
		pnlDatos3 = new HorizontalLayout();
		pnlDatos3.setImmediate(false);
		pnlDatos3.setWidth("-1px");
		pnlDatos3.setHeight("-1px");
		pnlDatos3.setMargin(false);
		pnlDatos3.setSpacing(true);
		
		// lblSexo
		lblSexo = new Label();
		lblSexo.setImmediate(false);
		lblSexo.setWidth("-1px");
		lblSexo.setHeight("-1px");
		lblSexo.setValue(" ");
		pnlDatos3.addComponent(lblSexo);
		
		// lblNacionalidad
		lblNacionalidad = new Label();
		lblNacionalidad.setImmediate(false);
		lblNacionalidad.setWidth("-1px");
		lblNacionalidad.setHeight("-1px");
		lblNacionalidad.setValue(" ");
		pnlDatos3.addComponent(lblNacionalidad);
		
		return pnlDatos3;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(true);
		horizontalLayout_2.setSpacing(true);
		
		// btnAgregar
		btnAgregar = new Button();
		btnAgregar.setCaption("Agregar");
		btnAgregar.setImmediate(true);
		btnAgregar.setWidth("-1px");
		btnAgregar.setHeight("-1px");
		horizontalLayout_2.addComponent(btnAgregar);
		
		// btnEliminar
		btnEliminar = new Button();
		btnEliminar.setCaption("Eliminar");
		btnEliminar.setImmediate(true);
		btnEliminar.setWidth("-1px");
		btnEliminar.setHeight("-1px");
		horizontalLayout_2.addComponent(btnEliminar);
		
		return horizontalLayout_2;
	}
	

}
