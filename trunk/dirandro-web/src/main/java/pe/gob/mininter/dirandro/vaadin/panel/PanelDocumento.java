package pe.gob.mininter.dirandro.vaadin.panel;

import java.io.OutputStream;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import pe.gob.mininter.dirandro.model.Dependencia;
import pe.gob.mininter.dirandro.model.Documento;
import pe.gob.mininter.dirandro.model.Empresa;
import pe.gob.mininter.dirandro.model.Entidad;
import pe.gob.mininter.dirandro.model.Persona;
import pe.gob.mininter.dirandro.model.Ruta;
import pe.gob.mininter.dirandro.model.Valor;
import pe.gob.mininter.dirandro.service.DependenciaService;
import pe.gob.mininter.dirandro.service.EmpresaService;
import pe.gob.mininter.dirandro.service.EntidadService;
import pe.gob.mininter.dirandro.service.PersonaService;
import pe.gob.mininter.dirandro.service.ValorService;
import pe.gob.mininter.dirandro.util.Constante;
import pe.gob.mininter.dirandro.vaadin.util.ComboBoxLOVS;
import pe.gob.mininter.dirandro.vaadin.util.Injector;
import pe.gob.mininter.dirandro.vaadin.util.UploadDirandro;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbstractSelect.Filtering;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class PanelDocumento extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private UploadDirandro upArchivo;

	@AutoGenerated
	private TextField txtAsuntoDoc;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;

	@AutoGenerated
	private ComboBoxLOVS cmbDocPrioridad;

	@AutoGenerated
	private PopupDateField dfDocummento;

	@AutoGenerated
	private PopupDateField dfReceopcion;

	@AutoGenerated
	private TextField txtFolios;

	@AutoGenerated
	private TextField txtDiasAtencion;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;

	@AutoGenerated
	private TextField txtDocNumero;

	@AutoGenerated
	private ComboBoxLOVS cmbDocTipo;

	@AutoGenerated
	private ComboBox cmbProcendenciaId;

	@AutoGenerated
	private ComboBox cmbTipo;

	@AutoGenerated
	private ComboBox cmbProcedencia;

	private static final long serialVersionUID = -5465782691669024632L;
	
	private ValorService valorService;
	private DependenciaService dependenciaService;
	private EntidadService entidadService;
	private PersonaService personaService;
	private EmpresaService empresaService;
	private Documento documento;
	
	private List<Valor> lstProcendencias;
	private List<Valor> lstTipoEntidades;
	private List<Dependencia> lstDirecciones;
	private List<Dependencia> lstDivisiones;
	private List<Entidad> lstEntidades;
	private List<Persona> lstPersonas;
	private List<Empresa> lstEmpresa;
	
	public PanelDocumento() {
		buildMainLayout();
		valorService = Injector.obtenerServicio(ValorService.class);
		dependenciaService = Injector.obtenerServicio(DependenciaService.class);
		entidadService = Injector.obtenerServicio(EntidadService.class);
		personaService = Injector.obtenerServicio(PersonaService.class);
		empresaService = Injector.obtenerServicio(EmpresaService.class);
		setCompositionRoot(mainLayout);
		cmbDocTipo.setCodigoLista(Constante.LISTA.CODIGO.DOCUMENTO_TIPO);
		cmbDocPrioridad.setCodigoLista(Constante.LISTA.CODIGO.PRIORIDAD);
		cargarProcedencia();
	}
	
	private void cargarProcedencia(){
		lstProcendencias = valorService.obtenerLista(Constante.LISTA.CODIGO.TABLAS);
		cmbProcedencia.setImmediate(true);
		cmbProcedencia.setContainerDataSource(new BeanItemContainer<Valor>(Valor.class,  lstProcendencias));
		cmbProcedencia.setItemCaptionPropertyId("descripcion");
		cmbProcedencia.setInputPrompt("Tipo");
		cmbProcedencia.addListener(new ValueChangeListener() {
			
			private static final long serialVersionUID = 6876725531841960773L;
			@Override
			public void valueChange(ValueChangeEvent event) {
				cmbTipo.removeAllItems();
				cmbProcedenciaChange(event);
			}
		});
	}
	private void cmbProcedenciaChange(ValueChangeEvent event){
		if (((Valor) cmbProcedencia.getValue()).getCodigo().equals(Constante.VALOR.CODIGO.ENTIDAD)) {
			lstTipoEntidades = valorService.obtenerLista(Constante.LISTA.CODIGO.ENTIDAD_TIPO);
			cmbTipo.setContainerDataSource(new BeanItemContainer<Valor>(Valor.class,  lstTipoEntidades));
			cmbTipo.setImmediate(true);
			cmbTipo.setItemCaptionPropertyId("nombre");
			cmbTipo.setInputPrompt("Tipo de Entidad");
			cmbTipo.addListener(new ValueChangeListener() {
				
				private static final long serialVersionUID = -4721770533858762047L;

				@Override
				public void valueChange(ValueChangeEvent event) {
					cmbProcendenciaId.removeAllItems();
					cargarEntidadesChange(event);
				}
			});
		}else if (((Valor) cmbProcedencia.getValue()).getCodigo().equals(Constante.VALOR.CODIGO.DEPENDENCIA)) {
			lstDirecciones = dependenciaService.buscarPadres();
			cmbTipo.setContainerDataSource(new BeanItemContainer<Dependencia>(Dependencia.class,  lstDirecciones));
			cmbTipo.setImmediate(true);
			cmbTipo.setItemCaptionPropertyId("nombre");
			cmbTipo.setInputPrompt("Direccion General");
			cmbTipo.addListener(new ValueChangeListener() {
				
				private static final long serialVersionUID = -4721770533858762047L;

				@Override
				public void valueChange(ValueChangeEvent event) {
					cmbProcendenciaId.removeAllItems();
					cargarDivisionesChange(event);
				}
			});
		}else if (((Valor) cmbProcedencia.getValue()).getCodigo().equals(Constante.VALOR.CODIGO.PERSONA)){
			cmbTipo.setVisible(false);
			lstPersonas = personaService.buscar(null);
			cmbProcendenciaId.setContainerDataSource(new BeanItemContainer<Persona>(Persona.class, lstPersonas));
			cmbProcendenciaId.setItemCaptionPropertyId("nombreCompleto");
			cmbProcendenciaId.setFilteringMode(Filtering.FILTERINGMODE_CONTAINS);
			cmbProcendenciaId.setImmediate(true);
		}else if (((Valor) cmbProcedencia.getValue()).getCodigo().equals(Constante.VALOR.CODIGO.EMPRESA)){
			cmbTipo.setVisible(false);
			lstEmpresa = empresaService.buscar(null);
			cmbProcendenciaId.setContainerDataSource(new BeanItemContainer<Empresa>(Empresa.class, lstEmpresa));
			cmbProcendenciaId.setItemCaptionPropertyId("razonSocial");
			cmbProcendenciaId.setFilteringMode(Filtering.FILTERINGMODE_CONTAINS);
			cmbProcendenciaId.setImmediate(true);
		}
		
			
	}
	
	private void cargarDivisionesChange(ValueChangeEvent event){
		lstDivisiones = dependenciaService.buscarHijos((Dependencia) cmbTipo.getValue());
		cmbProcendenciaId.setContainerDataSource(new BeanItemContainer<Dependencia>(Dependencia.class, lstDivisiones));
		cmbProcendenciaId.setItemCaptionPropertyId("nombre");
		cmbProcendenciaId.setFilteringMode(Filtering.FILTERINGMODE_CONTAINS);
		cmbProcendenciaId.setImmediate(true);
	}
	
	private void cargarEntidadesChange(ValueChangeEvent event){
		Entidad entidad = new Entidad();
		entidad.setTipo((Valor) cmbTipo.getValue());
		lstEntidades = entidadService.buscar(entidad);
		cmbProcendenciaId.setContainerDataSource(new BeanItemContainer<Entidad>(Entidad.class, lstEntidades));
		cmbProcendenciaId.setItemCaptionPropertyId("nombre");
		cmbProcendenciaId.setFilteringMode(Filtering.FILTERINGMODE_CONTAINS);
		cmbProcendenciaId.setImmediate(true);
	}
	
	
	
	public void limpiar() {
		cmbDocPrioridad.setValue(null);
		txtDocNumero.setValue("");
		cmbDocTipo.setValue(null);
		txtAsuntoDoc.setValue("");
		txtDiasAtencion.setValue("");
		txtFolios.setValue("");
		dfReceopcion.setValue(null);
		dfDocummento.setValue(null);
		upArchivo.limpiar();
	}
	
	public OutputStream getOutputStream() {
		return upArchivo.getOutputStream();
	}

	public Documento getDocumento() {
		if(documento == null) {
			documento = new Documento();
			documento.setTipoDocumento(cmbDocTipo.getValor());
			documento.setNroDocumento((String) txtDocNumero.getValue());
			documento.setPrioridad(cmbDocPrioridad.getValor());
			documento.setAsunto((String) txtAsuntoDoc.getValue());
			documento.setDiasAtencion(new BigDecimal((String) txtDiasAtencion.getValue()));
			documento.setFolios(new BigDecimal((String) txtFolios.getValue()));
			documento.setFechaDocumento((Date) dfDocummento.getValue());
			documento.setFechaRecepcion((Date) dfReceopcion.getValue());
			documento.setOsDocumento(getOutputStream());
			documento.setFilename(upArchivo.getFilename());
		}
		return documento;
	}
	
	public Valor getProcedencia() {
		return (Valor)cmbProcedencia.getValue();
	}
	
	public Long getCodigoProcedencia() {
		if(cmbProcendenciaId.getValue() != null) {
			return (Long)cmbProcendenciaId.getItem(cmbProcendenciaId.getValue()).getItemProperty("id").getValue();
		}
		return null;
	}

	public void setDocumento(Documento documento) {
		this.documento = documento;
	}	
	
	public void setHabilitarCarga(boolean habilitar) {
		cmbDocPrioridad.setEnabled(habilitar);
		cmbDocTipo.setEnabled(habilitar);
		cmbProcedencia.setEnabled(habilitar);
		cmbProcendenciaId.setEnabled(habilitar);
		cmbTipo.setEnabled(habilitar);
		txtAsuntoDoc.setEnabled(habilitar);
		txtDiasAtencion.setEnabled(habilitar);
		txtDocNumero.setEnabled(habilitar);
		txtFolios.setEnabled(habilitar);
		dfDocummento.setEnabled(habilitar);
		dfReceopcion.setEnabled(habilitar);
		upArchivo.setHabilitar(habilitar);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout
				.setDescription("Registra la documento que da origen al Parte Policial");
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2);
		
		// txtAsuntoDoc
		txtAsuntoDoc = new TextField();
		txtAsuntoDoc.setCaption("Asunto");
		txtAsuntoDoc.setImmediate(false);
		txtAsuntoDoc.setWidth("600px");
		txtAsuntoDoc.setHeight("-1px");
		txtAsuntoDoc.setRequired(true);
		txtAsuntoDoc.setInputPrompt("Asunto");
		txtAsuntoDoc.setMaxLength(500);
		mainLayout.addComponent(txtAsuntoDoc);
		
		// upArchivo
		upArchivo = new UploadDirandro();
		upArchivo.setImmediate(false);
		upArchivo.setWidth("-1px");
		upArchivo.setHeight("-1px");
		mainLayout.addComponent(upArchivo);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// cmbProcedencia
		cmbProcedencia = new ComboBox();
		cmbProcedencia.setCaption("Procendencia");
		cmbProcedencia.setImmediate(false);
		cmbProcedencia.setWidth("-1px");
		cmbProcedencia.setHeight("-1px");
		cmbProcedencia.setRequired(true);
		horizontalLayout_1.addComponent(cmbProcedencia);
		
		// cmbTipo
		cmbTipo = new ComboBox();
		cmbTipo.setCaption("Tipo");
		cmbTipo.setImmediate(false);
		cmbTipo.setWidth("-1px");
		cmbTipo.setHeight("-1px");
		cmbTipo.setRequired(true);
		horizontalLayout_1.addComponent(cmbTipo);
		
		// cmbProcendenciaId
		cmbProcendenciaId = new ComboBox();
		cmbProcendenciaId.setCaption("Sub Tipo");
		cmbProcendenciaId.setImmediate(false);
		cmbProcendenciaId.setWidth("-1px");
		cmbProcendenciaId.setHeight("-1px");
		cmbProcendenciaId.setRequired(true);
		horizontalLayout_1.addComponent(cmbProcendenciaId);
		
		// cmbDocTipo
		cmbDocTipo = new ComboBoxLOVS();
		cmbDocTipo.setCaption("Tipo de Documento");
		cmbDocTipo.setImmediate(false);
		cmbDocTipo.setDescription("Tipo de Documento");
		cmbDocTipo.setWidth("200px");
		cmbDocTipo.setHeight("-1px");
		horizontalLayout_1.addComponent(cmbDocTipo);
		
		// txtDocNumero
		txtDocNumero = new TextField();
		txtDocNumero.setCaption("Numero de Documento");
		txtDocNumero.setImmediate(false);
		txtDocNumero.setDescription("Numero de documento");
		txtDocNumero.setWidth("200px");
		txtDocNumero.setHeight("-1px");
		txtDocNumero.setRequired(true);
		txtDocNumero.setInputPrompt("Nro de Docuumento");
		horizontalLayout_1.addComponent(txtDocNumero);
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		horizontalLayout_2.setSpacing(true);
		
		// txtDiasAtencion
		txtDiasAtencion = new TextField();
		txtDiasAtencion.setCaption("Dias de Atencion");
		txtDiasAtencion.setImmediate(false);
		txtDiasAtencion.setWidth("150px");
		txtDiasAtencion.setHeight("-1px");
		txtDiasAtencion.setRequired(true);
		txtDiasAtencion.setInputPrompt("Dias de Atencion");
		horizontalLayout_2.addComponent(txtDiasAtencion);
		
		// txtFolios
		txtFolios = new TextField();
		txtFolios.setCaption("Nro. Folios");
		txtFolios.setImmediate(false);
		txtFolios.setWidth("150px");
		txtFolios.setHeight("-1px");
		txtFolios.setRequired(true);
		txtFolios.setInputPrompt("Nro. Folios");
		horizontalLayout_2.addComponent(txtFolios);
		
		// dfReceopcion
		dfReceopcion = new PopupDateField();
		dfReceopcion.setCaption("Fecha de Recepcion");
		dfReceopcion.setImmediate(false);
		dfReceopcion.setWidth("150px");
		dfReceopcion.setHeight("-1px");
		dfReceopcion.setRequired(true);
		dfReceopcion.setResolution(4);
		horizontalLayout_2.addComponent(dfReceopcion);
		
		// dfDocummento
		dfDocummento = new PopupDateField();
		dfDocummento.setCaption("Fecha del Documento");
		dfDocummento.setImmediate(false);
		dfDocummento.setWidth("150px");
		dfDocummento.setHeight("-1px");
		dfDocummento.setRequired(true);
		dfDocummento.setResolution(4);
		horizontalLayout_2.addComponent(dfDocummento);
		
		// cmbDocPrioridad
		cmbDocPrioridad = new ComboBoxLOVS();
		cmbDocPrioridad.setCaption("Prioridad");
		cmbDocPrioridad.setImmediate(false);
		cmbDocPrioridad.setWidth("150px");
		cmbDocPrioridad.setHeight("-1px");
		horizontalLayout_2.addComponent(cmbDocPrioridad);
		
		return horizontalLayout_2;
	}
}
