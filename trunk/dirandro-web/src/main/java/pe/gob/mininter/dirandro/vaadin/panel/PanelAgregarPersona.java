package pe.gob.mininter.dirandro.vaadin.panel;


import java.util.Date;
import java.util.List;

import pe.gob.mininter.dirandro.model.Distrito;
import pe.gob.mininter.dirandro.model.Pais;
import pe.gob.mininter.dirandro.model.Persona;
import pe.gob.mininter.dirandro.model.Valor;
import pe.gob.mininter.dirandro.service.PersonaService;
import pe.gob.mininter.dirandro.service.UbigeoService;
import pe.gob.mininter.dirandro.service.ValorService;
import pe.gob.mininter.dirandro.util.Constante;
import pe.gob.mininter.dirandro.vaadin.util.Injector;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;


public class PanelAgregarPersona extends CustomComponent implements ClickListener{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout pnlPrincipal;
	@AutoGenerated
	private HorizontalLayout pnl5;
	@AutoGenerated
	private Button btnCancelar;
	@AutoGenerated
	private Button btnGrabar;
	@AutoGenerated
	private HorizontalLayout pnl4;
	@AutoGenerated
	private PopupDateField dfFechaNacimiento;
	@AutoGenerated
	private ComboBox cmbLugarNacimiento;
	@AutoGenerated
	private HorizontalLayout pnl3;
	@AutoGenerated
	private ComboBox cmbNacionalidad;
	@AutoGenerated
	private ComboBox cmbSexo;
	@AutoGenerated
	private HorizontalLayout pnl2;
	@AutoGenerated
	private TextField txtMaterno;
	@AutoGenerated
	private TextField txtPaterno;
	@AutoGenerated
	private TextField txtNombre;
	@AutoGenerated
	private HorizontalLayout pnl1;
	@AutoGenerated
	private ComboBox cmbEstadoCivil;
	@AutoGenerated
	private TextField txtNumero;
	@AutoGenerated
	private ComboBox cmbTipoDocumento;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @param idParte 
	 */
	
	private Persona persona;
	
	private List<Valor> lstTipoDocumento;
	
	private List<Valor> lstSexo;
	
	private List<Pais> lstNacionalidad;
	
	private List<Valor> lstEstadoCivil;
	
	private List<Distrito> lstLugarNacimiento;
	
	private ValorService valorService;
	
	private UbigeoService ubigeoService;
	
	private PersonaService personaService;
	
	public Persona getPersona() {
		return persona;
	}
	public void setPersona(Persona persona) {
		this.persona = persona;
	}
	
	
	//***********************************************
	//Controles
	
	private TextField parent_txtNumeroDocumento;
	public TextField getParent_txtNumeroDocumento() {
		return parent_txtNumeroDocumento;
	}
	public void setParent_txtNumeroDocumento(TextField parent_txtNumeroDocumento) {
		this.parent_txtNumeroDocumento = parent_txtNumeroDocumento;
	}
	
	private ComboBox parent_cmbNombres;
	public ComboBox getParent_cmbNombres() {
		return parent_cmbNombres;
	}
	public void setParent_cmbNombres(ComboBox parent_cmbNombres) {
		this.parent_cmbNombres = parent_cmbNombres;
	}
	
	private TextField parent_txtTipoDocumento;
	public TextField getParent_txtTipoDocumento() {
		return parent_txtTipoDocumento;
	}
	public void setParent_txtTipoDocumento(TextField parent_txtTipoDocumento) {
		this.parent_txtTipoDocumento = parent_txtTipoDocumento;
	}
	
	private TextField parent_txtSexo = null;
	public TextField getParent_txtSexo() {
		return parent_txtSexo;
	}
	public void setParent_txtSexo(TextField parent_txtSexo) {
		this.parent_txtSexo = parent_txtSexo;
	}
	
	private TextField parent_txtNacionalidad = null;
	public TextField getParent_txtNacionalidad() {
		return parent_txtNacionalidad;
	}
	public void setParent_txtNacionalidad(TextField parent_txtNacionalidad) {
		this.parent_txtNacionalidad = parent_txtNacionalidad;
	}

	//Controles
	//***********************************************
		
	
	
	
	public PanelAgregarPersona(Long idParte) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		valorService = Injector.obtenerServicio(ValorService.class);
		ubigeoService = Injector.obtenerServicio(UbigeoService.class );
		personaService = Injector.obtenerServicio(PersonaService.class);
		
		lstNacionalidad = ubigeoService.obtenerPaises();
		lstLugarNacimiento = ubigeoService.obtenerTodos();
		persona = new Persona();
		
		postConstruct();
		debugId();
	}
	
	private void debugId(){
		
	}
	public void postConstruct() {
		
		cargarDatos();
		btnGrabar.addListener((ClickListener)this);
		btnCancelar.addListener((ClickListener)this);
		
	}
	
	public void cargarDatos(){
		
		cmbTipoDocumento.setInputPrompt("tipoDocumento");				
		lstTipoDocumento = valorService.obtenerLista(Constante.LISTA.CODIGO.DOCUMENTO_TIPO);		
		BeanItemContainer<Valor> bicTipoDocumentos = new BeanItemContainer<Valor>(Valor.class,  lstTipoDocumento);		
		cmbTipoDocumento.setContainerDataSource(bicTipoDocumentos);		
		cmbTipoDocumento.setItemCaptionPropertyId("nombre");
		
		cmbEstadoCivil.setInputPrompt("estadoCivil");				
		lstEstadoCivil = valorService.obtenerLista(Constante.LISTA.CODIGO.ESTADO_CIVIL);		
		BeanItemContainer<Valor> bicEstadoCiviles = new BeanItemContainer<Valor>(Valor.class,  lstEstadoCivil);		
		cmbEstadoCivil.setContainerDataSource(bicEstadoCiviles);		
		cmbEstadoCivil.setItemCaptionPropertyId("nombre");
		
		cmbSexo.setInputPrompt("sexo");
		lstSexo = valorService.obtenerLista(Constante.LISTA.CODIGO.SEXO);
		cmbSexo.setContainerDataSource(new BeanItemContainer<Valor>(Valor.class, lstSexo));
		cmbSexo.setItemCaptionPropertyId("nombre");
		
		cmbNacionalidad.setInputPrompt("Nacionalidad");
		cmbNacionalidad.setItemCaptionPropertyId("nombre");
		cmbNacionalidad.setContainerDataSource(new BeanItemContainer<Pais>(Pais.class, lstNacionalidad));
		//cmbPerNacionalidad.setFilteringMode(Filtering.FILTERINGMODE_CONTAINS);
		
		cmbLugarNacimiento.setInputPrompt("Distrito - Provincia - Departamento");
		cmbLugarNacimiento.setItemCaptionPropertyId("nombreCompleto");
		cmbLugarNacimiento.setContainerDataSource(new BeanItemContainer<Distrito>(Distrito.class,  lstLugarNacimiento));
		//cmbLugarNacimiento.setFilteringMode(Filtering.FILTERINGMODE_CONTAINS);		
		
	} 
	
	@Override
	public void buttonClick(ClickEvent event) {

		if (event.getButton().equals(btnGrabar)) {
			 registrarPersona();
			 
			 this.getParent_txtNumeroDocumento().setValue(this.persona.getNroDocumento());
			 this.getParent_cmbNombres().getContainerDataSource().addItem(this.persona);
			 this.getParent_cmbNombres().setValue(this.persona);
			 this.getParent_txtTipoDocumento().setValue(this.persona.getTipoDocumento().getNombre());
			 
			 if(this.getParent_txtSexo() != null)
				 this.getParent_txtSexo().setValue(this.persona.getSexo() == "F" ? "Femenino" : "Masculino");
			 
			 if(this.getParent_txtNacionalidad() != null)
				 this.getParent_txtNacionalidad().setValue(this.persona.getNacionalidad().getNombre());
			 			 
			 getApplication().getMainWindow().removeWindow(getWindow());
		}
		else
			if (event.getButton().equals(btnCancelar)) {
				 				 
				 getApplication().getMainWindow().removeWindow(getWindow());
			}
	}	
	
	private void registrarPersona(){
		persona.setNombres( txtNombre.getValue().toString() );
		persona.setApeMaterno( txtMaterno.getValue().toString());
		persona.setApePaterno( txtPaterno.getValue().toString());
		persona.setNroDocumento(txtNumero.getValue().toString());		
		persona.setTipoDocumento((Valor)cmbTipoDocumento.getValue());
		persona.setEstadoCivil((Valor)this.cmbEstadoCivil.getValue());
		persona.setFecNacimiento((Date)dfFechaNacimiento.getValue());
		persona.setNacionalidad((Pais)cmbNacionalidad.getValue());
		Valor v = (Valor)cmbSexo.getValue();
		persona.setSexo(v.getCodigo());
		
		personaService.crear(persona);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("600px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("600px");
		setHeight("-1px");
		
		// pnlPrincipal
		pnlPrincipal = buildPnlPrincipal();
		mainLayout.addComponent(pnlPrincipal);
		mainLayout.setComponentAlignment(pnlPrincipal, new Alignment(20));
		
		return mainLayout;
	}
	@AutoGenerated
	private VerticalLayout buildPnlPrincipal() {
		// common part: create layout
		pnlPrincipal = new VerticalLayout();
		pnlPrincipal.setCaption("Nueva Persona");
		pnlPrincipal.setImmediate(false);
		pnlPrincipal.setWidth("-1px");
		pnlPrincipal.setHeight("-1px");
		pnlPrincipal.setMargin(true);
		pnlPrincipal.setSpacing(true);
		
		// pnl1
		pnl1 = buildPnl1();
		pnlPrincipal.addComponent(pnl1);
		
		// pnl2
		pnl2 = buildPnl2();
		pnlPrincipal.addComponent(pnl2);
		
		// pnl3
		pnl3 = buildPnl3();
		pnlPrincipal.addComponent(pnl3);
		
		// pnl4
		pnl4 = buildPnl4();
		pnlPrincipal.addComponent(pnl4);
		
		// pnl5
		pnl5 = buildPnl5();
		pnlPrincipal.addComponent(pnl5);
		pnlPrincipal.setComponentAlignment(pnl5, new Alignment(20));
		
		return pnlPrincipal;
	}
	@AutoGenerated
	private HorizontalLayout buildPnl1() {
		// common part: create layout
		pnl1 = new HorizontalLayout();
		pnl1.setImmediate(false);
		pnl1.setWidth("-1px");
		pnl1.setHeight("-1px");
		pnl1.setMargin(false);
		pnl1.setSpacing(true);
		
		// cmbTipoDocumento
		cmbTipoDocumento = new ComboBox();
		cmbTipoDocumento.setCaption("Tipo Documento");
		cmbTipoDocumento.setImmediate(false);
		cmbTipoDocumento.setWidth("100px");
		cmbTipoDocumento.setHeight("-1px");
		pnl1.addComponent(cmbTipoDocumento);
		
		// txtNumero
		txtNumero = new TextField();
		txtNumero.setCaption("Numero");
		txtNumero.setImmediate(false);
		txtNumero.setWidth("90px");
		txtNumero.setHeight("-1px");
		pnl1.addComponent(txtNumero);
		
		// cmbEstadoCivil
		cmbEstadoCivil = new ComboBox();
		cmbEstadoCivil.setCaption("Estado Civil");
		cmbEstadoCivil.setImmediate(false);
		cmbEstadoCivil.setWidth("-1px");
		cmbEstadoCivil.setHeight("-1px");
		pnl1.addComponent(cmbEstadoCivil);
		
		return pnl1;
	}
	@AutoGenerated
	private HorizontalLayout buildPnl2() {
		// common part: create layout
		pnl2 = new HorizontalLayout();
		pnl2.setImmediate(false);
		pnl2.setWidth("-1px");
		pnl2.setHeight("-1px");
		pnl2.setMargin(false);
		pnl2.setSpacing(true);
		
		// txtNombre
		txtNombre = new TextField();
		txtNombre.setCaption("Nombres");
		txtNombre.setImmediate(false);
		txtNombre.setWidth("-1px");
		txtNombre.setHeight("-1px");
		pnl2.addComponent(txtNombre);
		
		// txtPaterno
		txtPaterno = new TextField();
		txtPaterno.setCaption("Apellido Paterno");
		txtPaterno.setImmediate(false);
		txtPaterno.setWidth("-1px");
		txtPaterno.setHeight("-1px");
		pnl2.addComponent(txtPaterno);
		
		// txtMaterno
		txtMaterno = new TextField();
		txtMaterno.setCaption("Apellido Materno");
		txtMaterno.setImmediate(false);
		txtMaterno.setWidth("-1px");
		txtMaterno.setHeight("-1px");
		pnl2.addComponent(txtMaterno);
		
		return pnl2;
	}
	@AutoGenerated
	private HorizontalLayout buildPnl3() {
		// common part: create layout
		pnl3 = new HorizontalLayout();
		pnl3.setImmediate(false);
		pnl3.setWidth("-1px");
		pnl3.setHeight("-1px");
		pnl3.setMargin(false);
		pnl3.setSpacing(true);
		
		// cmbSexo
		cmbSexo = new ComboBox();
		cmbSexo.setCaption("Sexo");
		cmbSexo.setImmediate(false);
		cmbSexo.setWidth("120px");
		cmbSexo.setHeight("-1px");
		pnl3.addComponent(cmbSexo);
		
		// cmbNacionalidad
		cmbNacionalidad = new ComboBox();
		cmbNacionalidad.setCaption("Nacionalidad");
		cmbNacionalidad.setImmediate(false);
		cmbNacionalidad.setWidth("-1px");
		cmbNacionalidad.setHeight("-1px");
		pnl3.addComponent(cmbNacionalidad);
		
		return pnl3;
	}
	@AutoGenerated
	private HorizontalLayout buildPnl4() {
		// common part: create layout
		pnl4 = new HorizontalLayout();
		pnl4.setImmediate(false);
		pnl4.setWidth("-1px");
		pnl4.setHeight("-1px");
		pnl4.setMargin(false);
		pnl4.setSpacing(true);
		
		// cmbLugarNacimiento
		cmbLugarNacimiento = new ComboBox();
		cmbLugarNacimiento.setCaption("Lugar Nacimiento:");
		cmbLugarNacimiento.setImmediate(false);
		cmbLugarNacimiento.setWidth("-1px");
		cmbLugarNacimiento.setHeight("-1px");
		pnl4.addComponent(cmbLugarNacimiento);
		
		// dfFechaNacimiento
		dfFechaNacimiento = new PopupDateField();
		dfFechaNacimiento.setCaption("Fecha de Nacimiento:");
		dfFechaNacimiento.setImmediate(false);
		dfFechaNacimiento.setWidth("-1px");
		dfFechaNacimiento.setHeight("-1px");
		pnl4.addComponent(dfFechaNacimiento);
		
		return pnl4;
	}
	@AutoGenerated
	private HorizontalLayout buildPnl5() {
		// common part: create layout
		pnl5 = new HorizontalLayout();
		pnl5.setImmediate(false);
		pnl5.setWidth("-1px");
		pnl5.setHeight("-1px");
		pnl5.setMargin(false);
		pnl5.setSpacing(true);
		
		// btnGrabar
		btnGrabar = new Button();
		btnGrabar.setCaption("Grabar");
		btnGrabar.setImmediate(true);
		btnGrabar.setWidth("80px");
		btnGrabar.setHeight("-1px");
		pnl5.addComponent(btnGrabar);
		
		// btnCancelar
		btnCancelar = new Button();
		btnCancelar.setCaption("Cancelar");
		btnCancelar.setImmediate(true);
		btnCancelar.setWidth("80px");
		btnCancelar.setHeight("-1px");
		pnl5.addComponent(btnCancelar);
		
		return pnl5;
	}
	
	
}
