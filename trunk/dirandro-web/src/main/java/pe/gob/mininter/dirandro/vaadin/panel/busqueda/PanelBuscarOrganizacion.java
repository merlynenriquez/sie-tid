package pe.gob.mininter.dirandro.vaadin.panel.busqueda;

import java.util.List;

import pe.gob.mininter.dirandro.model.Opcion;
import pe.gob.mininter.dirandro.model.Organizacion;
import pe.gob.mininter.dirandro.service.OrganizacionService;
import pe.gob.mininter.dirandro.util.HarecUtil;
import pe.gob.mininter.dirandro.vaadin.util.DirandroComponent;
import pe.gob.mininter.dirandro.vaadin.util.Injector;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class PanelBuscarOrganizacion extends DirandroComponent{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout pnlPrincipal;
	@AutoGenerated
	private Table tblOrganizaciones;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;
	@AutoGenerated
	private Button btnLimpiar;
	@AutoGenerated
	private Button btnBuscar;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private TextField txtUbicacionAct;
	@AutoGenerated
	private TextField txtZonaOperacion;
	@AutoGenerated
	private TextField txtIntegrantes;
	@AutoGenerated
	private TextField txtNombre;
	private static final long serialVersionUID = 7099586307060757930L;
	
	private OrganizacionService organizacionService;
	private List<Organizacion> listOrganizacion;
	private IndexedContainer container;
	
	public PanelBuscarOrganizacion(List<Opcion> acciones, String height) {
		super(acciones, height);
		
		organizacionService = Injector.obtenerServicio(OrganizacionService.class);
		
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postConstruct();
		debugId();
	}
	
	private void debugId(){
		
	}
	
	public void postConstruct() {
		
		inicalizaTabla();		
		
		btnBuscar.addListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				buscar();
			}
		});
		btnLimpiar.addListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				limpiar();
			}
		});
		
	}
	

	private void inicalizaTabla( ){
		container = new IndexedContainer();
		container.addContainerProperty("id", Long.class,  null);
		container.addContainerProperty("nombre", String.class, null);
		container.addContainerProperty("descripcion", String.class, null);
		container.addContainerProperty("integrantes", String.class, null);
		container.addContainerProperty("zonaOperacion", String.class, null);
		container.addContainerProperty("zonaActivos", String.class, null);
		
		tblOrganizaciones.setContainerDataSource(container);
		tblOrganizaciones.setVisibleColumns(new Object[]{"nombre", "descripcion","integrantes","zonaOperacion","zonaActivos"});
	
		tblOrganizaciones.setColumnWidth("nombre", 150);
		tblOrganizaciones.setColumnWidth("descripcion", 250);
		tblOrganizaciones.setColumnWidth("integrantes", 100);
		tblOrganizaciones.setColumnWidth("zonaOperacion", 250);
		tblOrganizaciones.setColumnWidth("zonaActivos", 250);
		
		tblOrganizaciones.setColumnHeader("nombre", "Organización");
		tblOrganizaciones.setColumnHeader("descripcion", "Descripción");
		tblOrganizaciones.setColumnHeader("integrantes", "Integrantes");
		tblOrganizaciones.setColumnHeader("zonaOperacion", "Zona Operación");
		tblOrganizaciones.setColumnHeader("zonaActivos", "Zona Activos");
		
	}
	
	private void limpiar(){
		txtIntegrantes.setValue("");
		txtNombre.setValue("");
		txtUbicacionAct.setValue("");
		txtZonaOperacion.setValue("");
	}
	
	private void buscar(){
		
		Organizacion org = new Organizacion();
		org.setNroIntegrantes( HarecUtil.toBigDecimal(txtIntegrantes.getValue() ));
		org.setUbicacionActivos( HarecUtil.nullToEmpty( txtUbicacionAct.getValue() ));
		org.setZonaOperacion( HarecUtil.nullToEmpty( txtZonaOperacion.getValue() ));
		org.setNombre( HarecUtil.nullToEmpty( txtNombre.getValue() ));
		
		listOrganizacion = organizacionService.buscar(org);
		
		llenaTabla();
	}
	
	private void llenaTabla(){
		if(listOrganizacion!=null){
			
			tblOrganizaciones.removeAllItems();
			
			int con=1;
			for (Organizacion o: listOrganizacion){
				
				Item item = container.addItem(con++);
				item.getItemProperty("id").setValue(o.getId());
				item.getItemProperty("nombre").setValue( HarecUtil.nullToEmpty( o.getNombre() ) );
				item.getItemProperty("descripcion").setValue( HarecUtil.nullToEmpty(o.getDescripcion() ));
				item.getItemProperty("integrantes").setValue( HarecUtil.nullToEmpty( o.getNroIntegrantes() ) );
				item.getItemProperty("zonaOperacion").setValue( HarecUtil.nullToEmpty( o.getZonaOperacion() ) );
				item.getItemProperty("zonaActivos").setValue( HarecUtil.nullToEmpty(o.getUbicacionActivos() ));
				
			}	
		}
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// pnlPrincipal
		pnlPrincipal = buildPnlPrincipal();
		mainLayout.addComponent(pnlPrincipal);
		mainLayout.setComponentAlignment(pnlPrincipal, new Alignment(20));
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildPnlPrincipal() {
		// common part: create layout
		pnlPrincipal = new VerticalLayout();
		pnlPrincipal.setStyleName("whiteBackGround");
		pnlPrincipal.setImmediate(false);
		pnlPrincipal.setWidth("800px");
		pnlPrincipal.setHeight("-1px");
		pnlPrincipal.setMargin(true);
		pnlPrincipal.setSpacing(true);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		pnlPrincipal.addComponent(horizontalLayout_2);
		
		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		pnlPrincipal.addComponent(horizontalLayout_3);
		
		// tblOrganizaciones
		tblOrganizaciones = new Table();
		tblOrganizaciones.setImmediate(false);
		tblOrganizaciones.setWidth("800px");
		tblOrganizaciones.setHeight("350px");
		pnlPrincipal.addComponent(tblOrganizaciones);
		
		return pnlPrincipal;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		horizontalLayout_2.setSpacing(true);
		
		// txtNombre
		txtNombre = new TextField();
		txtNombre.setCaption("Nombre");
		txtNombre.setImmediate(false);
		txtNombre.setWidth("190px");
		txtNombre.setHeight("-1px");
		txtNombre.setInputPrompt("Nombre de la organización");
		horizontalLayout_2.addComponent(txtNombre);
		
		// txtIntegrantes
		txtIntegrantes = new TextField();
		txtIntegrantes.setCaption("# Integrantes");
		txtIntegrantes.setImmediate(false);
		txtIntegrantes.setDescription("Número mínimo de integrantes");
		txtIntegrantes.setWidth("100px");
		txtIntegrantes.setHeight("-1px");
		txtIntegrantes.setInputPrompt("Mínimo de Integrantes");
		txtIntegrantes.setMaxLength(5);
		horizontalLayout_2.addComponent(txtIntegrantes);
		
		// txtZonaOperacion
		txtZonaOperacion = new TextField();
		txtZonaOperacion.setCaption("Zona Operación");
		txtZonaOperacion.setImmediate(false);
		txtZonaOperacion.setWidth("200px");
		txtZonaOperacion.setHeight("-1px");
		txtZonaOperacion.setInputPrompt("Zona Operación ");
		horizontalLayout_2.addComponent(txtZonaOperacion);
		
		// txtUbicacionAct
		txtUbicacionAct = new TextField();
		txtUbicacionAct.setCaption("Ubicación Activos");
		txtUbicacionAct.setImmediate(false);
		txtUbicacionAct.setWidth("190px");
		txtUbicacionAct.setHeight("-1px");
		txtUbicacionAct.setInputPrompt("Ubicación de los Activos");
		horizontalLayout_2.addComponent(txtUbicacionAct);
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("100.0%");
		horizontalLayout_3.setHeight("-1px");
		horizontalLayout_3.setMargin(false);
		horizontalLayout_3.setSpacing(true);
		
		// btnBuscar
		btnBuscar = new Button();
		btnBuscar.setCaption("Buscar");
		btnBuscar.setImmediate(true);
		btnBuscar.setWidth("-1px");
		btnBuscar.setHeight("-1px");
		horizontalLayout_3.addComponent(btnBuscar);
		horizontalLayout_3.setComponentAlignment(btnBuscar, new Alignment(6));
		
		// btnLimpiar
		btnLimpiar = new Button();
		btnLimpiar.setCaption("Limpiar");
		btnLimpiar.setImmediate(true);
		btnLimpiar.setWidth("-1px");
		btnLimpiar.setHeight("-1px");
		horizontalLayout_3.addComponent(btnLimpiar);
		
		return horizontalLayout_3;
	}

}
